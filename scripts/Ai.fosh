
# ifndef __MAIN_AI
import iAiManager@ get_AiManager() from "ai"; // AiHashMemory@ memmory = @AiHashList; - return valid reference
# endif

shared interface iAiManager
{
	void Set( iAI@ ai );
	void Set( Critter& critter, iAI@ ai );
	iAI@ Get( Critter& critter );
	iAI@ Get( const string&in name );
	iAI@ Get( uint nameHash );
}

shared interface iAI
{
	bool IsEnemy( Critter& target );			// if target is enemy return true else return false 
	int ProtectedRate( Critter& target );		// return priority protection for target
	void Initialize( Critter& critter );	
	
	uint GetWorkCritters( Critter@[] @critters, Critter& critter );	// get critters for further worked, return count critters
	uint GetTeamCritters( Critter& critter, Critter@[]@ critters );
	
	bool AddAttackPlane( Critter& critter, Critter& target );
	
	bool get_IsIdleWalk( );
	bool get_IsControllerEnemy( );
	
	const string get_Name( );
	
	iAI @Copy( Critter& critter );			// return copy ai
	
	Fraction@ get_fraction( );
}