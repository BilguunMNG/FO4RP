#ifndef WEATHER_MODULE
#define WEATHER_MODULE

#include "_utils.fos"
#include "globalmap_group_h.fos"
#include "weather_h.fos"
#include "plants_h.fos"

bool mapIsAboveGround (Map& map)
{
	switch (map.GetProtoId())
	{
		case 174:
		case 173:
		case 172:
		case 171:
		return true;
	}
	return false;
}

void initWeather (Map& map, bool firstTime)
{
	CreateTimeEvent (__FullSecond + WEATHER_CHANGE_TIME, "changeWeather", map.Id, false);
}

uint changeWeather(uint[]@ values) 
{
	Map@[] allMaps;
	int mapLength = allMaps.length();
	int i = 0,
		k = 0;
	int isRaining = Random(0, 9);
	uint8 rainIntensity = 5;
	if (isRaining != 0)
	{
		rainIntensity = 0;
	}
	int windStrength = Random(0, 3);
	string windFunc = "wind" + windStrength;
	while (k < 200) 
	{
		mapLength = GetAllMaps (k, allMaps);
		while (i < mapLength)
		{
			if (mapIsAboveGround (allMaps[i]))
			{
				allMaps[i].SetRain (rainIntensity);
				if (isRaining == 0)
				{
					CreateTimeEvent (__FullSecond + 1, "increaseRain", allMaps[i].Id, false);
				}
				allMaps[i].SetEvent (MAP_EVENT_LOOP_3, windFunc);
				allMaps[i].SetLoopTime (MAP_EVENT_LOOP_3, WIND_SOUND_TIME);
			}
			i++;
		}
		k++;
	}
	return WEATHER_CHANGE_TIME;
}

uint increaseRain (uint[]@ values) 
{
	Map@ map = GetMap (values [0]);
	uint8 rainIntensity = map.GetRain();
	if( rainIntensity > Random (0, 500) )
	{
		rainIntensity = 0;
	}
	else if( rainIntensity <= 250 ) 
	{
		rainIntensity += 5;
	}
	Location@ loc = map.GetLocation();
	Map@[] allMaps;
	loc.GetMaps(allMaps);
	int mapLength = allMaps.length();
	int i = 0;
	while ( i < mapLength ) 
	{
		if ( mapIsAboveGround(allMaps[i]) ) 
		{
			allMaps[i].SetRain(rainIntensity);
		}
		i++;
	}
	if( rainIntensity == 0 ) 
	{
		return 0;
	}
	return RAIN_INCREASE_TIME;
}

void applyWetness( Critter& cr )
{
	Map@ map = cr.GetMap();
	Item@ armor = cr.GetItem( 0, SLOT_ARMOR );
	Item@ helmet = cr.GetItem( 0, SLOT_HEAD );

    /* Base intensity in range of 0 to 255 */
    uint8 amount = map.GetRain();
    
    if( valid( armor ) )
    {    
		if( armor.Proto.Item_Subtype == ITEM_SUBTYPE_ARMOR_AC45 || armor.Proto.Item_Subtype == ITEM_SUBTYPE_ARMOR_AC50 )
		{
			return;
		}
		else if( armor.Proto.Material == MATERIAL_POLYMER )
		{
			amount = CLAMP( amount - 30, 0, 250 );
		}
	}

    if( valid( helmet ) )
    {
        amount = CLAMP( amount - 20, 0, 250 );
    }

    cr.StatBase[ ST_WETNESS ] += ( amount / 25 ); 
}

void wind0( Map& map )
{
}

void wind1( Map& map )
{
}

void wind2( Map& map )
{
}

void wind3( Map& map )
{
}

uint e_GlobalRainSimulation( uint[]@ values )
{
	uint duration_time = values[0] * 60;
	if( duration_time <= 0 )
	{
		__GlobalRain == 0;
		return 0; 
	}
	
	uint elapsed_time = values[1];
	float Pi = 3.1415926535f;
    uint strength = CLAMP( ( sin( Pi * elapsed_time / duration_time ) * 255 ), 1, 255 );

	if( elapsed_time < duration_time && __GlobalRain != 0 )
	{
		
		uint repeat;
		if( strength > 200 )
		{
			repeat = 720;
		}
		else if( strength >= 100 && strength < 200 )
		{
			repeat = 315;
		}
		else
		{
			repeat = 200;
		}
		
		values[1] = elapsed_time + repeat;
		
		Map@[] maps;
		for( int i = 0, iend = GetAllMaps( 0, maps ); i < iend; i++ )
		{   
			uint16 pid = maps[ i ].GetProtoId();
			if( GetMapLevelByPid( pid ) == 0 )
			{
				Map@ map = maps[i];
				map.SetRain( strength );
				RainSound( map, strength );
			}
		}
		return REAL_SECOND( repeat );
	}
	
	Map@[] maps;
	for( int j = 0, iend = GetAllMaps( 0, maps ); j < iend; j++ )
	{   
		uint16 pid = maps[ j ].GetProtoId();
		if( GetMapLevelByPid( pid ) == 0 )
		{
			Map@ map = maps[j];
			map.SetRain( 0 );
			RainSound( map, 0 );
			applyWatering( map );
		}
	}
	__GlobalRain = 0;
	return 0;
}

void applyWatering( Map& map )
{
	Item@[] plants;
	map.GetItemsByType( ITEM_TYPE_PLANT, plants );
	map.GetItems( PID_MUSHBED_EMPTY, plants );
	if( plants.length() > 0 )
	{
		for( uint i = 0; i < plants.length(); i ++ )
		{
			Item@ plant = plants[i];
			if( valid( plant ) )
			{
				if( !map.HasRoof( plant.HexX, plant.HexY ) )
				{
					plant.PLANT_WATERING = 1;
				}
			}
		}
	}
}

//~run weather _TreminateRainEvent 0 0 0
void _TreminateRainEvent( Critter& gm, int param0, int param1, int param2 )
{
	__GlobalRain = 0;
}

//Rain sound selections
void RainSound( Map& map, int strength )
{
	string rainSound = "None.ogg";
	if( strength > 0 && strength < 100 )
	{
		rainSound = "rain_1.ogg";
	}
	else if( strength >= 100 && strength < 200 )
	{
		rainSound = "Storm_1R.ogg";
	}
	else if( strength >= 200 )
	{
		rainSound = "Groza_1.ogg";
	}
	
	Critter@[] players;
	map.GetCritters( 0, FIND_ALL | FIND_ONLY_PLAYERS, players );
	if( players.length() > 0 )
	{
		for( uint i = 0; i < players.length(); i++ )
		{
			Critter@ player = players[i];
			if( valid( player ) )
			{
				int timeStamp = GetTick();
				int soundId = map.Id + 1000 + strength + player.Id;
				player.RunClientScript( "fofmod@__PlayMapMusic", soundId, timeStamp, 0, rainSound, null );
			}
		}
	}
}

#endif // WEATHER_MODULE