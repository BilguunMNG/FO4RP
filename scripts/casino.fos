#ifndef CASINO
#define CASINO

#include "_utils.fos"
#include "casino_h.fos"

import int BitUnpacker( int storage, uint8 index, uint8 bit ) from "mio_deviants_toolkit";
import int BitZeroing( int storage, uint8 index, uint8 bit ) from "mio_deviants_toolkit";
import int BitPacker( int cell, int storage, uint8 index, uint8 bit ) from "mio_deviants_toolkit";
import int BitChange( int number, int storage, uint8 index, uint8 bit ) from "mio_deviants_toolkit";
import uint8 ChoiceMask( int[] list ) from "mio_deviants_toolkit";

//Точка входа из main.fos при юзе денег из руки / инвентаря
bool SlotMachineCheck( Critter& cr, Item@ cash, Item@ target ) //exported - проверки на разное перед началом работы
{
    Map@ map = cr.GetMap();
    if( !valid( map ) ) { return false; }
    if( !valid( cash ) || !valid(target) ) { return false; }
    
	uint16 cashPid = cash.GetProtoId();
    if( cashPid != PID_BOTTLE_CAPS ) { return false; }
	
    uint16 SlotMachine = target.GetProtoId();
    if( SlotMachine != PID_SLOT_MACHINE && SlotMachine != PID_SLOT_MACHINE2 ) { return false; }
    SlotMachineWork( cr, cash, target );
    return true;
}

// Логика ставок при юзе денег из руки / инвентаря
bool SlotMachineWork( Critter& cr, Item& cash, Item& target ) {
    Map@ map = cr.GetMap();
    if( !valid( map ) ) { return false; }
	
	uint bet = MIN_BET;
    if( valid( cash ) ) {  
		bet = cash.GetCount();
    } else {
        bet = _CritCountItem( cr, PID_BOTTLE_CAPS );
        if( bet < MIN_BET ) {
            cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_USE_NOTHING );
            return false;
        }
    }
	
    if( cash.CritSlot != SLOT_HAND1 && bet > MAX_BET ) { // деньги из руки играем минимальную ставку, инвентарь - до максимальной
        bet = MAX_BET;
	} else {
		bet = MIN_BET;
	}
	
	PlaySlots( cr, target, bet );
	return true;
}

// Логика работы автомата
bool PlaySlots( Critter& cr, Item& target, uint bet )
{
	Map@ map = cr.GetMap();
    if( !valid( map ) ) { return false; }
	
	Item@ machineCaps = target.GetItem( PID_BOTTLE_CAPS, 0 );
	if( !valid( machineCaps ) ) {// денег вообще нет, совсем
		cr.Say( SAY_NETMSG, "|0xFFFF00 В автомате закончились деньги." );
		return false; 
	} else {		
		uint machineCapsCount = machineCaps.GetCount(); // айтем есть, достаем кол-во.
		if( machineCapsCount < bet ) {
			cr.Say( SAY_NETMSG, "|0xFFFF00 В автомате не хватает денег для  для покрытия ставки." );
			return false; 
		}
		
		cr.DeleteItem( PID_BOTTLE_CAPS, bet );
		cr.Say( SAY_NETMSG, "-" + bet + "$" );
		target.AddItem( PID_BOTTLE_CAPS, bet, 0 );
		map.SetTextMsg( target.HexX, target.HexY, COLOR_GRAY, TEXTMSG_TEXT, STR_ONEHANDED_RING );
			
		uint8 roll = Random( 1, 100 );
		if( roll >= ( 82 - cr.Skill[ SK_GAMBLING ] / 10 ) ) {
			if( Random( 1, 100 ) == 100 ) {
				if( machineCapsCount >= 5000 ) {
					bet*=10;
				} else if( machineCapsCount <= 4999 && machineCapsCount >= 4500 ) {
					bet*=9;
				} else if( machineCapsCount <= 4499 && machineCapsCount >= 4000 ) {
					bet*=8;
				} else if( machineCapsCount <= 3999 && machineCapsCount >= 3500 ) {
					bet*=7;
				} else if( machineCapsCount <= 3499 && machineCapsCount >= 3000 ) {
					bet*=6;
				} else if( machineCapsCount <= 2999 && machineCapsCount >= 2500 ) {
					bet*=5;
				} else if( machineCapsCount <= 2499 && machineCapsCount >= 2000 ) {
					bet*=4;
				} else if( machineCapsCount <= 1999 && machineCapsCount >= 300 ) {
					bet*=3;
				}
				cr.AddItem( PID_BOTTLE_CAPS, bet );
				cr.Say( SAY_NETMSG, "|0xFFFF00 ДЖЕЕЕЕЕЕКПОТ!!! " + bet + "$" );
				map.PlaySound( "BIGWIN1.ACM", cr.HexX, cr.HexY, 20 );
				target.AddItem( PID_BOTTLE_CAPS, -bet, 0 );
				return true;
				
			} else {
				cr.AddItem( PID_BOTTLE_CAPS, bet*2 );
				cr.Say( SAY_NETMSG, "|0xFFFF00 Выигрыш: " + bet*2 + "$" );
				map.PlaySound( "BIGWIN.ACM", cr.HexX, cr.HexY, 10 );
				target.AddItem( PID_BOTTLE_CAPS, -bet*2, 0 );
				return true;
			}
		} else {
			cr.Say( SAY_NETMSG, "|0xFF0000 Проигрыш!" );
			map.PlaySound( "LOSER.ACM", cr.HexX, cr.HexY, 10 );
		}
	}
	return true;
}

// Интерактивное меню ку3, точка входа main.fos
class MenuSlotMachine: CenteredMenuHandler {
    uint target_id;
    uint map_id;
	
    MenuSlotMachine(Item& target, Map& map) {
        target_id = target.Id;
        map_id = map.Id;
    }

    bool MenuUpdate( Critter& cr, iDialogBox& menu ) {
        Map@ map = GetMap(map_id);
        Item@ target = GetItem(target_id);
		
        if( map is null || target is null ) {
            return false;
        }
		
		if( menu.Button( "Ставка 5 $" ) ) {
			uint bet = 5;
			Item@ cash = cr.GetItem( PID_BOTTLE_CAPS, -1 );
			if( valid( cash ) )
			{
				bet <= cash.GetCount();
				PlaySlots( cr, target, bet );
				return true;
			} else {
				cr.Say( SAY_NETMSG, "|0xFFFF00 У Вас нет такой суммы." );
				return false;
			}
		}
		if( menu.Button( "Ставка 10 $" ) ) {
			uint bet = 10;
			Item@ cash = cr.GetItem( PID_BOTTLE_CAPS, -1 );
			if( valid( cash ) )
			{
				bet <= cash.GetCount();
				PlaySlots( cr, target, bet );
				return true;
			} else {
				cr.Say( SAY_NETMSG, "|0xFFFF00 У Вас нет такой суммы." );
				return false;
			}
		}
		if( menu.Button( "Ставка 25 $" ) ) {
			uint bet = 25;
			Item@ cash = cr.GetItem( PID_BOTTLE_CAPS, -1 );
			if( valid( cash ) )
			{
				bet <= cash.GetCount();
				PlaySlots( cr, target, bet );
				return true;
			} else {
				cr.Say( SAY_NETMSG, "|0xFFFF00 У Вас нет такой суммы." );
				return false;
			}
		}
		if( menu.Button( "Ставка 50 $" ) ) {
			uint bet = 50;
			Item@ cash = cr.GetItem( PID_BOTTLE_CAPS, -1 );
			if( valid( cash ) )
			{
				bet <= cash.GetCount();
				PlaySlots( cr, target, bet );
				return true;
			} else {
				cr.Say( SAY_NETMSG, "|0xFFFF00 У Вас нет такой суммы." );
				return false;
			}
		}
		if( menu.Button( "Ставка 100 $" ) ) {
			uint bet = 100;
			Item@ cash = cr.GetItem( PID_BOTTLE_CAPS, -1 );
			if( valid( cash ) )
			{
				bet <= cash.GetCount();
				PlaySlots( cr, target, bet );
				return true;
			} else {
				cr.Say( SAY_NETMSG, "|0xFFFF00 У Вас нет такой суммы." );
				return false;
			}
		}
		if( menu.Button( "Открыть сейф" ) ) {
			if( FLAG( target.LockerCondition, LOCKER_LOCKED ) ) {
				cr.Say( SAY_NETMSG, "|0xFFFF00 Аппарат заперт." );
				map.PlaySound( "ILCNTNRB.ACM", target.HexX, target.HexY, 5 );
				return true;
			} else {
				ShowContainer( cr, target, TRANSFER_HEX_CONT_UP );
				map.PlaySound( "IOCNTNRB.ACM", target.HexX, target.HexY, 5 );
				return false;
			}
        }
		return true;
    }
	
	// UI менюхи
    string@ Description( Critter& cr ) {
	
		Item@ target = GetItem(target_id);
		string status;
		Item@ machineCaps = target.GetItem( PID_BOTTLE_CAPS, 0 );
		if( valid( machineCaps ) ) {
			uint machineCapsCount = machineCaps.GetCount();
			uint mul = 0;
			if( machineCapsCount >= 5000 ) {
				mul = 10;
			} else if( machineCapsCount <= 4999 && machineCapsCount >= 4500 ) {
				mul = 9;
			} else if( machineCapsCount <= 4499 && machineCapsCount >= 4000 ) {
				mul = 8;
			} else if( machineCapsCount <= 3999 && machineCapsCount >= 3500 ) {
				mul = 7;
			} else if( machineCapsCount <= 3499 && machineCapsCount >= 3000 ) {
				mul = 6;
			} else if( machineCapsCount <= 2999 && machineCapsCount >= 2500 ) {
				mul = 5;
			} else if( machineCapsCount <= 2499 && machineCapsCount >= 2000 ) {
				mul = 4;
			} else if( machineCapsCount <= 1999 && machineCapsCount >= 300 ) {
				mul = 3;
			} else {
				mul = 2;
			}
			status = "ДЖЕКПОТ: X " + mul + " от ставки!"; 
			
		} else {
		status = "В аппарате закончились деньги, приносим извинения.";
		}
		
		string balance;
		Item@ cash = cr.GetItem( PID_BOTTLE_CAPS, -1 );
		if( valid( cash ) ) {
			uint amount = cash.GetCount();
			balance ="Ваш баланс: " + amount + " $";
		} else {
		balance = "У вас нет монет для игры.";
		}
		
		string info;
		info = "Однорукий бандит № " + target.Id;
		info += "\nАппарат принимает только монеты!";
		info += "\n\n" + status;
		info += "\n\n" + balance;
        return info;
    }
	
    string@ ButtonCancel() {
        return ButtonDecorator("Скрыть меню", null);
    }
}

// точка входа из main.fos при юзе рукой
void StartMenuSlotMachine( Critter& cr, Item& target) // exported
{
    Map@ map = cr.GetMap();
    if( map is null ) {
        return;
    }

    iMenuHandler@ handler = MenuSlotMachine(target, map);
    iDialogBox@ menu = OpenMenu(cr, "Однорукий Бандит", handler);
}

//COIN_FLIPPING
void CoinUse( Critter& cr, Item& item )
{
	if( item.CritSlot == SLOT_HAND1 ) {
		string emote = "Подкидывает монетку: ";
		string side = Random( 0, 1 ) == 1 ? "Бермин" : "Бак";

		cr.Say( SAY_NORM, "|0x3CF800 - " + "|0xFFFF00 " + side + "|0x3CF800  -" );
		cr.Say( SAY_EMOTE_ON_HEAD, emote + "|0x7CFC00 " + side + "|0xFF00FF ." );
	}
}

//DICE_MECHANICS
void DiceUse( Critter& cr, Item& item )
{
	string emote = "Выбрасывает: ";
	uint8 variable = Random( 1, 6 );

	cr.Say( SAY_NORM, "|0x3CF800 - " + "|0xFFFF00 " + variable + "|0x3CF800  -" );
	cr.Say( SAY_EMOTE_ON_HEAD, emote + "|0x7CFC00 " + variable + "|0xFF00FF ." );
	Map @ map = cr.GetMap();
	map.PlaySound( "DICE1.ACM", cr.HexX, cr.HexY, 2 );
}

//CARDS_MECHANICS
int[] CardsSide( int storage )
{
	int[] color = {};
	for( uint8 i = 0; i < 27; i++ ) { 
		color.insertLast( BitUnpacker( storage, i, 1 ) ); 
	}
	return color;
}

void CardsUse( Critter& cr, Item& item )
{
	if( item.Val3 == 0 && item.Val4 == 0 ) { 
		cr.Say( SAY_NETMSG, "Колода опустела, нужно перетасовать." ); 
		return;
	}

	string emote = cr.Param[ ST_GENDER ] == 0 ? "Вытянул" : ( cr.Param[ ST_GENDER ] == 1 ? "Вытянула" : "Вытянуло" );
	int[] SideMask;
	bool colorSide = Random( 0, 1 ) == 0 ? false : true;
	
	if( colorSide ) {
		if( item.Val3 > 0 ) { 
			SideMask = CardsSide( item.Val3 ); 
		} else { 
			SideMask = CardsSide( item.Val4 ); 
			colorSide = false; 
		}
	} else {
		if( item.Val4 > 0 ) { 
			SideMask = CardsSide( item.Val4 ); 
		} else { 
			SideMask = CardsSide( item.Val3 ); 
			colorSide = true; 
		}
	}
	
	int Card = ChoiceMask( SideMask );
	string[] picture = { "вальта", "даму", "короля", "туза" };
	string[] picturechat = { "Валет", "Дама", "Король", "Туз" };
	string[] lear = { "буби", "черви", "треф", "пик" };
	string result = " ";
	string resultchat = " ";
	
	if( colorSide ) {
		if( Card <= 12 ) {
			if( Card <= 8 ) { 
				result += ( Card + 2 ) + "-ку " + lear[ 0 ]; 
				resultchat += ( Card + 2 )+ " " + UINTColor( COLOR_LRED ) + lear[ 0 ]; 
			} else { 
				result += picture[ Card - 9 ] + " " +lear[ 0 ];
				resultchat += picturechat[ Card - 9 ] + " " + UINTColor( COLOR_LRED ) + lear[ 0 ];
			}
		} else if( Card <= 25 ) {
			if( Card <= 21 ) { 
				result += ( Card - 11 ) + "-ку " + lear[ 1 ]; 
				resultchat += ( Card - 11 )+ " " + UINTColor( COLOR_LRED ) + lear[ 1 ]; 
			} else { result += picture[ Card - 22 ] + " " +lear[ 1 ];
				resultchat += picturechat[ Card - 22 ] + " " + UINTColor( COLOR_LRED )+lear[ 1 ]; 
			}
		} else { result += "цветного джокера"; 
			resultchat += UINTColor( COLOR_LRED )+"Цветной джокер"; 
		}
		item.Val3 = BitZeroing( item.Val3, Card, 1 );
	} else {
		if( Card <= 12 ) {
			if( Card <= 8 ) { 
				result += ( Card + 2 ) + "-ку " + lear[ 2 ];
				resultchat += ( Card + 2 )+" " +UINTColor( COLOR_GRAY )+lear[ 2 ];
			} else { 
				result += picture[ Card - 9 ] +" "+lear[ 2 ];
				resultchat += picturechat[ Card - 9 ] +" "+UINTColor( COLOR_GRAY )+lear[ 2 ];
			}
		} else if( Card <= 25 ) {
			if( Card <= 21 ) { 
				result += ( Card - 11 )+ "-ку " +lear[ 3 ]; 
				resultchat += ( Card - 11 )+" " +UINTColor( COLOR_GRAY )+lear[ 3 ]; 
			} else { 
				result += picture[ Card - 22 ] +" "+lear[ 3 ];
				resultchat += picturechat[ Card - 22 ] +" "+UINTColor( COLOR_GRAY ) + lear[ 3 ]; 
			}
		} else { 
			result += "бесцветного джокера";
			resultchat += UINTColor( COLOR_GRAY )+"Бесцветный джокер"; 
		}
		item.Val4 = BitZeroing( item.Val4, Card, 1 );
	}
	cr.Say( SAY_NORM, UINTColor( COLOR_TEXT )+"-" +UINTColor( COLOR_YELLOW )+resultchat +UINTColor( COLOR_TEXT )+" -" );
	cr.Say( SAY_EMOTE_ON_HEAD, emote + result );
}


#endif //CASINO