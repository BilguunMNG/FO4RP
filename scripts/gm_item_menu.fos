void unsafe_GM_PANNEL_ITEM( Critter& player, int itemId, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( isGM( player ) )
	{
		GM_PANNEL_ITEM( player, itemId, param1, param2, param3, param4 );
	}
}

void GM_PANNEL_ITEM( Critter& player, int itemId, int param1, int param2, string@ param3, int[] @ param4 )
{ 
	GM_ItemPanel( player, itemId ); 
}
	
void GM_ItemPanel( Critter& player, int itemId )
{
    if( !isGM( player ) )
	{
		return;
    }
	
    Item@ item = GetItem( itemId );
	if( !valid( item ) )
	{
		return;
	}
	
	player.StatBase[ ST_VAR0 ] = itemId;
	
	bool isCont = item.GetType() == ITEM_TYPE_CONTAINER;
	player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_ITEM" );
	
	player.Say( SAY_DIALOGBOX_TEXT, FullItemInfo(item) );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Variables" );
	player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "enable script" );
	player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Flags #1" );
	player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Flags #2" );
	player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Lex + Pic" );
	player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "OFFSET( " + item.OffsetX + ", " + item.OffsetY + " )" );
	player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "CLEAR OFFSET" );
	if( isCont )
	{
		player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Contents" );
	}
	else
	{
		player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Break for %" );
	}
}

uint[] ItemFlags = 
{
	ITEM_HIDDEN								 ,// 0x00000001 )
	ITEM_FLAT                                ,// 0x00000002 )
	ITEM_NO_BLOCK                            ,// 0x00000004 )
	ITEM_SHOOT_THRU                          ,// 0x00000008 )
	ITEM_LIGHT_THRU                          ,// 0x00000010 )
	ITEM_MULTI_HEX							 ,// 0x00000020 )
	ITEM_TWO_HANDS                         ,// 0x00000080 )
	ITEM_BIG_GUN                           ,// 0x00000100 )
	ITEM_ALWAYS_VIEW                         ,// 0x00000200 )
	ITEM_HAS_TIMER                           ,// 0x00000400 )
	ITEM_BAD_ITEM                            ,// 0x00000800 )
	ITEM_NO_HIGHLIGHT                        ,// 0x00001000 )
	ITEM_SHOW_ANIM                           ,// 0x00002000 )
	ITEM_SHOW_ANIM_EXT                       ,// 0x00004000 )
	ITEM_LIGHT                               ,// 0x00008000 )
	ITEM_GECK                                ,// 0x00010000 )
	
	// Group2
	ITEM_TRAP                                ,// 0x00020000 )
	ITEM_NO_LIGHT_INFLUENCE                  ,// 0x00040000 )
	ITEM_NO_LOOT                             ,// 0x00080000 )
	ITEM_NO_STEAL                            ,// 0x00100000 )
	ITEM_GAG                                 ,// 0x00200000 )
	ITEM_COLORIZE                            ,// 0x00400000 )
	ITEM_COLORIZE_INV                        ,// 0x00800000 )
	ITEM_CAN_USE_ON_SMTH                     ,// 0x01000000 )
	ITEM_CAN_LOOK                            ,// 0x02000000 )
	ITEM_CAN_TALK                            ,// 0x04000000 )
	ITEM_CAN_PICKUP                          ,// 0x08000000 )
	ITEM_CAN_USE                             ,// 0x10000000 )
	ITEM_HOLODISK                            ,// 0x20000000 )
	ITEM_RADIO                               // 0x40000000 )
};

string[] ItemFlagsName = 
{
	"ITEM_HIDDEN"							,// 0x00000001 )
	"ITEM_FLAT"								,// 0x00000002 )
	"ITEM_NO_BLOCK"                     	,// 0x00000004 )
	"ITEM_SHOOT_THRU"  	                    ,// 0x00000008 )
	"ITEM_LIGHT_THRU"                       ,// 0x00000010 )
	"ITEM_MULTI_HEX"						,// 0x00000020 )
	"ITEM_TWO_HANDS"                      	,// 0x00000080 )
	"ITEM_BIG_GUN"                       	,// 0x00000100 )
	"ITEM_ALWAYS_VIEW"                      ,// 0x00000200 )
	"ITEM_HAS_TIMER"                        ,// 0x00000400 )
	"ITEM_BAD_ITEM"                      	,// 0x00000800 )
	"ITEM_NO_HIGHLIGHT"                     ,// 0x00001000 )
	"ITEM_SHOW_ANIM"                        ,// 0x00002000 )
	"ITEM_SHOW_ANIM_EXT"                    ,// 0x00004000 )
	"ITEM_LIGHT"                     		,// 0x00008000 )
	"ITEM_GECK"                             ,// 0x00010000 )

	// Group2
	"ITEM_TRAP"				                ,// 0x00020000 )
	"ITEM_NO_LIGHT_INFLUENCE" 	            ,// 0x00040000 )
	"ITEM_NO_LOOT"                          ,// 0x00080000 )
	"ITEM_NO_STEAL"                         ,// 0x00100000 )
	"ITEM_GAG"                              ,// 0x00200000 )
	"ITEM_COLORIZE"                         ,// 0x00400000 )
	"ITEM_COLORIZE_INV"                    	,// 0x00800000 )
	"ITEM_CAN_USE_ON_SMTH"                  ,// 0x01000000 )
	"ITEM_CAN_LOOK"                       	,// 0x02000000 )
	"ITEM_CAN_TALK" 		                ,// 0x04000000 )
	"ITEM_CAN_PICKUP" 	                    ,// 0x08000000 )
	"ITEM_CAN_USE"  	                  	,// 0x10000000 )
	"ITEM_HOLODISK"                         ,// 0x20000000 )
	"ITEM_RADIO"                             // 0x40000000 )
};

void show_GM_VAL_PANNEL( Critter& player, Item& item )
{
	player.ShowScreen( SCREEN_DIALOGBOX, 15, "answer_GM_PANNEL_ITEM_VALS" );
	player.Say( SAY_DIALOGBOX_TEXT, "Item, protoID =" + item.GetProtoId() + ", Id =" + item.Id );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), ""+item.Val0 +" Val0" );
	player.Say( SAY_DIALOGBOX_BUTTON( 1 ), ""+item.Val1 +" Val1" );
	player.Say( SAY_DIALOGBOX_BUTTON( 2 ), ""+item.Val2 +" Val2" );
	player.Say( SAY_DIALOGBOX_BUTTON( 3 ), ""+item.Val3 +" Val3" );
	player.Say( SAY_DIALOGBOX_BUTTON( 4 ), ""+item.Val4 +" Val4" );
	player.Say( SAY_DIALOGBOX_BUTTON( 5 ), ""+item.Val5 +" Val5" );
	player.Say( SAY_DIALOGBOX_BUTTON( 6 ), ""+item.Val6 +" Val6" );
	player.Say( SAY_DIALOGBOX_BUTTON( 7 ), ""+item.Val7 +" Val7" );
	player.Say( SAY_DIALOGBOX_BUTTON( 8 ), ""+item.Val8 +" Val8" );
	player.Say( SAY_DIALOGBOX_BUTTON( 9 ), ""+item.Val9 +" Val9" );
	player.Say( SAY_DIALOGBOX_BUTTON( 10 ), ""+item.LockerId +" Locker id" );
	player.Say( SAY_DIALOGBOX_BUTTON( 11 ), ""+item.LockerComplexity +" Complexity" );
	player.Say( SAY_DIALOGBOX_BUTTON( 12 ), ""+item.LockerCondition +" Condition" );
	player.Say( SAY_DIALOGBOX_BUTTON( 13 ), ""+item.Info +" Info" );
	player.Say( SAY_DIALOGBOX_BUTTON( 14 ), ""+item.TrapValue +" TrapValue" );
}

void answer_GM_PANNEL_ITEM( Critter& player, uint answerI, string& answerS )
{
    uint itemId = player.StatBase[ ST_VAR0 ];
	Item@ item = GetItem( itemId );
    if( !valid( item ) )
	{
		return;
    }
	
	if( answerI == 0 )
    {
		show_GM_VAL_PANNEL( player, item );
    }
	
	if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 4, "answer_GM_PANNEL_ITEM_SCRIPT" );
        player.Say( SAY_DIALOGBOX_TEXT, "Item, protoID =" + item.GetProtoId() + ", Id =" + item.Id );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Workbench" );
		player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Furniture" );
		player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Dialog Door" );
		player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Delete Script" );
    }
	
	if( answerI == 2 )
	{
		player.ShowScreen( SCREEN_DIALOGBOX, 16, "answer_GM_PANNEL_ITEM_Flags0" );
		player.Say( SAY_DIALOGBOX_TEXT, "Item, protoID =" + item.GetProtoId() + ", id =" + item.Id );
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "[RETURN]" );
		for( uint i = 0; i < 15; i++ )
		{
			string state = FLAG( item.Flags, ItemFlags[i] ) ? "yes" : "no";
			player.Say( SAY_DIALOGBOX_BUTTON( i+1 ), ItemFlagsName[i] + ": " + state );
		}
	}
	
	if( answerI == 3 )	
	{
		player.ShowScreen( SCREEN_DIALOGBOX, 15, "answer_GM_PANNEL_ITEM_Flags1" );
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "[RETURN]" );
		player.Say( SAY_DIALOGBOX_TEXT, "Item, protoID =" + item.GetProtoId() + ", id =" + item.Id );
		for( uint i = 0; i < 14; i++ )
		{
			string state2 = FLAG( item.Flags, ItemFlags[i + 15] ) ? "yes" : "no";
			player.Say( SAY_DIALOGBOX_BUTTON( i+1 ), ItemFlagsName[ i + 15 ] + ": " + state2 );
		}
	}
	
	if( answerI == 4 )
	{
		showFakingMenu( player );
	}
	
	if( answerI == 5 )
	{
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_ITEM_OFFSET" );
		player.Say( SAY_SAY_TITLE, "dx dy" );
	}
	
	if( answerI == 6 )
	{
		offset( item, 0, 0 );
		GM_ItemPanel( player, itemId );
	}

	if( answerI == 7 )
	{
		if( item.GetType() == ITEM_TYPE_CONTAINER )
		{
			ShowContainer( player, item, TRANSFER_FAR_CONT );
		}
		else
		{
			player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_ITEM_BREAK" );
			player.Say( SAY_SAY_TITLE, "Break for %:" );
		}
	}
}

void ask_GM_PANNEL_ITEM_OFFSET( Critter& player, uint answerI, string& answerS )
{
    uint itemId = player.StatBase[ ST_VAR0 ];
    Item@ item = GetItem( itemId );
    if( !valid( item ) )
	{
		return;
	}
	
	int dx = 0, dy = 0;
	string@[]@ parts = splitEx( answerS, " " );
	if( answerS.length() < 1 || !valid(parts) || parts.length() != 2 || !StrToInt( parts[0], dx ) || !StrToInt( parts[1], dy ) )
	{
		player.Say( SAY_NETMSG, RED + "Wrong input!" + YELLOW + " Enter two numbers in format:\n\t'" + WHITE + "X Y" + YELLOW + "'" );
		return;
	}
	
	offset( item, dx, dy );
	GM_ItemPanel( player, itemId );
}

void ask_GM_PANNEL_ITEM_BREAK( Critter& player, uint answerI, string& answerS )
{
    Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
    if( !valid( item ) )
	{
		return;
	}
	
	int number = 0;
	if( answerS.length() < 1 || !StrToInt( answerS, number ) )
	{
		return;
	}
	
	
	GM_brokeItem( player, item.Id, number * 100, 0, null, null );
}

void setItemFlags( Critter& player, uint n )
{
    Item@ item = GetItem( player.Stat[ ST_VAR0 ] );
    if( !valid( item ) )
	{
		return;
	}
	
	if( FLAG( item.Flags, ItemFlags[n] ) )
	{
		UNSETFLAG( item.Flags, ItemFlags[n] );
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " has unset flag " + ItemFlags[n] + " for item" + item.Id + " -^- (END)", null );
	}
	else
	{
		SETFLAG( item.Flags, ItemFlags[n] );
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " has set set flag " + ItemFlags[n] + " for item" + item.Id + " -^- (END)", null );
	}
}

void answer_GM_PANNEL_ITEM_Flags0( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
	{
		GM_PANNEL_ITEM( player, player.StatBase[ ST_VAR0 ], 0, 0, null, null );
		return;
	}
	
	setItemFlags( player, answerI-1 );
	answer_GM_PANNEL_ITEM( player, 2, "" );
}

void answer_GM_PANNEL_ITEM_Flags1( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
	{
		int[] vals = {};
		GM_PANNEL_ITEM( player, player.StatBase[ ST_VAR0 ], 0, 0, "", vals );
		return;
	}
	
    setItemFlags( player, (answerI-1) + 15 );
	answer_GM_PANNEL_ITEM( player, 3, "" );
}

//GM pannel item script inits
void answer_GM_PANNEL_ITEM_SCRIPT( Critter& player, uint answerI, string& answerS )
{
	Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
	if( !valid( item ) )
	{
		return;
	}
	
    if( answerI == 0 )
    {
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " has set workbench script for item: " + item.Id + "", null );
		SetWorkbench( player, item.Id, 0, 0 );
    }
	
	if( answerI == 1 ) 
	{
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " has set furniture script for item: " + item.Id + "", null );
		_InitFurniture( item, true );
		item.Update();
	}
	
	if( answerI == 2 ) 
	{
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " has set security door script for item: " + item.Id + "", null );
		SetSecurityDoor( player, item.Id, 0, 0 );
	}
	
	if( answerI == 3 ) 
	{
		item.SetScript( "_DeleteScript" );
		player.Say( SAY_NETMSG, "|0xFFFF00 Script deleted." );
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " has deleted all scripts for item: " + item.Id + "", null );
		return;
	}
	player.Say( SAY_NETMSG, "|0xFFFF00 Script set." );
}

void _DeleteScript( Item& item, bool firstTime )
{
	item.SetEvent( ITEM_EVENT_ATTACK, "" );
	item.SetEvent( ITEM_EVENT_USE, "" );
	item.SetEvent( ITEM_EVENT_USE_ON_ME, "" );
	item.SetEvent( ITEM_EVENT_SKILL, "" );
	item.SetEvent( ITEM_EVENT_DROP, "" );
	item.SetEvent( ITEM_EVENT_MOVE, "" );
	item.SetEvent( ITEM_EVENT_WALK, "" );
	item.Update();
}

void answer_GM_PANNEL_ITEM_VALS( Critter& player, uint answerI, string& answerS )
{
	Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
	if( !valid( item ) )
	{
		return;
	}
	
	player.ParamBase[ ST_VAR1 ] = answerI;
	player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_ITEM" );

	string[] data = { "LockerId", "LockerComplexity", "LockerCondition", "Info", "TrapValue" };
	string info = "Val #";
	if( answerI < 10 )
	{
		info += answerI;
	}
	else
	{
		info = data[ answerI - 10 ];
	}
	player.Say( SAY_SAY_TITLE, info );
}

void ask_GM_PANNEL_ITEM( Critter& player, uint answerI, string& answerS )
{
	Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
	if( !valid( item ) )
	{
		return;
	}
	
    if( answerS.length() > 0 )
    {
        int val_number = player.StatBase[ ST_VAR1 ];
        int number = 0;
        StrToInt( answerS, number );
		switch( val_number )
		{
			case( 0 ):
				item.Val0 = number;
				break;
			case( 1 ):
				item.Val1 = number;
				break;
			case( 2 ):
				item.Val2 = number;
				break;
			case( 3 ):
				item.Val3 = number;
				break;
			case( 4 ):
				item.Val4 = number;
				break;
			case( 5 ):
				item.Val5 = number;
				break;
			case( 6 ):
				item.Val6 = number;
				break;
			case( 7 ):
				item.Val7 = number;
				break;
			case( 8 ):
				item.Val8 = number;
				break;
			case( 9 ):
				item.Val9 = number;
				break;
			case( 10 ):
				item.LockerId = number;
				break;
			case( 11 ):
				item.LockerComplexity = number;
				break;
			case( 12 ):
				item.LockerCondition = number;
				break;
			case( 13 ):
				item.Info = number;
				break;	  
			case( 14 ):
				item.TrapValue = number;
				break;	  
		}
		
		item.Update();
		
        player.Say( SAY_NETMSG, "You have changed item's val" + val_number + " to " + number + " for item: " + item.Id + "." );
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " has changed item's val" + val_number + " to " + number + " for item: " + item.Id + ".", null );
		show_GM_VAL_PANNEL( player, item );
    }
}