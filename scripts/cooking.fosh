
class Recipe
{
	uint16 resultFood;
	array<int> ingredients;
	array<int> ingredientsAmount;
	array<int> wasteItems;
	array<int> wasteItemsAmount;
	int skillRequirement;
	int missingMessage;
	int foodName;
	int failMessage;
	int successMessage;

	Recipe(uint16 &in resFood, array<int> &in ing, array<int> &in ingAmount, array<int> &in wasteItm, array<int> &in wasteItmAmount, int &in skillReq, int &in missMsg, int &in name, int &in failMsg, int &in sucMsg)
	{
		resultFood = resFood;
		ingredients = ing;
		ingredientsAmount = ingAmount;
		wasteItems = wasteItm;
		wasteItemsAmount = wasteItmAmount;
		skillRequirement = skillReq;
		missingMessage = missMsg;
		foodName = name;
		failMessage = failMsg;
		successMessage = sucMsg;
	}
};

array<Recipe> recipes;

void AddRecipe(const Recipe &in recipe)
{
	recipes.insertLast(recipe);
}

Recipe@ GetRecipeByPid( uint16 pid )
{
	for( uint i = 0, len = recipes.length(); i < len; i++ )
	{
		Recipe recipe = recipes[i];
		if( recipe.resultFood == pid )
		{
			return recipe;
		}
	}
	
	return null;
}

void InitializeRecipes()
{
	//Maggots
	AddRecipe(Recipe(
		PID_MAGGOT_SOUP,
		array<int> = {PID_MAGGOT, PID_GLASS_BOTTLE_FULL, PID_BOWL},
		array<int> = {3, 1, 1},
		array<int> = {PID_BOTTLE_GLASS},
		array<int> = {1},
		100,
		STR_MAGGOT_SOUP_INGRIDIENT,
		STR_MAGGOT_SOUP,
		STR_MAGGOT_SOUP_FAIL,
		STR_MAGGOT_SOUP_SUCCESS                                                
	));

	//Rat Stew
	AddRecipe(Recipe(
		PID_RAT_STEW,
		array<int> = {PID_RAT_MEAT, PID_PEYOTE, PID_GLASS_BOTTLE_FULL, PID_BOWL},
		array<int> = {1, 1, 1, 1},
		array<int> = {PID_BOTTLE_GLASS},
		array<int> = {1},
		110,
		STR_RAT_STEW_INGRIDIENT,
		STR_RAT_STEW,
		STR_RAT_STEW_FAIL,
		STR_RAT_STEW_SUCCESS                                                
	));

	//Salad
	AddRecipe(Recipe(
		PID_SALAD,
		array<int> = {PID_ALGAE, PID_MUTATED_FRUIT, PID_BOWL},
		array<int> = {2, 1, 1},
		array<int> = {},
		array<int> = {},
		120,
		STR_SALAD_INGRIDIENT,
		STR_SALAD,
		STR_SALAD_FAIL,
		STR_SALAD_SUCCESS                                                
	));

	//Herbal Stew
	AddRecipe(Recipe(
		PID_HERBAL_SOUP,
		array<int> = {PID_CABBAGE, PID_XANDER_ROOT, PID_GLASS_BOTTLE_FULL, PID_BOWL},
		array<int> = {1, 1, 1, 1},
		array<int> = {PID_BOTTLE_GLASS},
		array<int> = {1},
		130,
		STR_SOUP_INGRIDIENT,
		STR_SOUP,
		STR_SOUP_FAIL,
		STR_SOUP_SUCCESS                                                
	));

	//Kebab
	AddRecipe(Recipe(
		PID_MEAT_ON_A_STICK,
		array<int> = {PID_MEAT, PID_XANDER_ROOT},
		array<int> = {1, 1},
		array<int> = {},
		array<int> = {},
		140,
		STR_KEBAB_INGRIDIENT,
		STR_KEBAB,
		STR_KEBAB_FAIL,
		STR_KEBAB_SUCCESS                                                
	));

	//Corn Tortilla - Тортилья
	AddRecipe(Recipe(
		PID_FLAPJACK,
		array<int> = {PID_CORN_FLOUR, PID_XANDER_ROOT},
		array<int> = {1, 1},
		array<int> = {},
		array<int> = {},
		150,
		STR_TORTILLA_INGRIDIENT,
		STR_TORTILLA,
		STR_TORTILLA_FAIL,
		STR_TORTILLA_SUCCESS                                                
	));

	//Potato Fries
	AddRecipe(Recipe(
		PID_POTATO_FRIES,
		array<int> = {PID_POTATO, PID_PLANT_OIL, PID_BOWL},
		array<int> = {1, 1, 1},
		array<int> = {PID_PHIAL},
		array<int> = {1},
		160,
		STR_POTATO_FRIES_INGRIDIENT,
		STR_POTATO_FRIES,
		STR_POTATO_FRIES_FAIL,
		STR_POTATO_FRIES_SUCCESS
	));
	
	//Potato Pancakes
	AddRecipe(Recipe(
		PID_POTATO_PANCAKES,
		array<int> = {PID_POTATO, PID_PLANT_OIL, PID_BOWL, PID_CORN_FLOUR},
		array<int> = {2, 1, 1, 1},
		array<int> = {PID_PHIAL},
		array<int> = {1},
		170,
		STR_POTATO_PANCAKES_INGRIDIENT,
		STR_POTATO_PANCAKES,
		STR_POTATO_PANCAKES_FAIL,
		STR_POTATO_PANCAKES_SUCCESS                                                
	));

	//Potato Chips
	AddRecipe(Recipe(
		PID_POTATO_CHIPS,
		array<int> = {PID_POTATO, PID_XANDER_ROOT, PID_PLANT_OIL, PID_BOWL},
		array<int> = {1, 1, 1, 1},
		array<int> = {PID_PHIAL},
		array<int> = {1},
		180,
		STR_POTATO_CHIPS_INGRIDIENT,
		STR_POTATO_CHIPS,
		STR_POTATO_CHIPS_FAIL,
		STR_POTATO_CHIPS_SUCCESS                                                
	));

	//Potato Mashed With Cutlet
	AddRecipe(Recipe(
		PID_POTATO_MASHED_CUTLET,
		array<int> = {PID_POTATO, PID_BROC_FLOWER, PID_PLANT_OIL, PID_BOWL, PID_GECKO_MEAT},
		array<int> = {2, 1, 1, 1, 1},
		array<int> = {PID_PHIAL},
		array<int> = {1},
		190,
		STR_POTATO_MASHED_CUTLET_INGRIDIENT,
		STR_POTATO_MASHED_CUTLET,
		STR_POTATO_MASHED_CUTLET_FAIL,
		STR_POTATO_MASHED_CUTLET_SUCCESS                                                
	));

	//Pretzel
	AddRecipe(Recipe(
		PID_PRETZEL,
		array<int> = {PID_CORN_FLOUR, PID_FERMENT, PID_SUGAR},
		array<int> = {1, 1, 1},
		array<int> = {},
		array<int> = {},
		200,
		STR_PRETZEL_INGRIDIENT,
		STR_PRETZEL,
		STR_PRETZEL_FAIL,
		STR_PRETZEL_SUCCESS                                                
	));

	//Pancakes
	AddRecipe(Recipe(
		PID_PANCAKES,
		array<int> = {PID_SUGAR, PID_MUTATED_FRUIT, PID_PLANT_OIL, PID_BOWL, PID_CORN_FLOUR, PID_GLASS_BOTTLE_FULL},
		array<int> = {1, 2, 1, 1, 2, 1},
		array<int> = {PID_PHIAL},
		array<int> = {1},
		210,
		STR_PANCAKES_INGRIDIENT,
		STR_PANCAKES,
		STR_PANCAKES_FAIL,
		STR_PANCAKES_SUCCESS                                                
	));

	//Stuffed Stomach
	AddRecipe(Recipe(
		PID_COOKED_MOLERAT_STOMATCH,
		array<int> = {PID_MEAT, PID_MOLERAT_STOMATCH, PID_BROC_FLOWER, PID_BOWL},
		array<int> = {1, 1, 2, 1},
		array<int> = {},
		array<int> = {},
		220,
		STR_STOMACH_INGRIDIENT,
		STR_STOMACH,
		STR_STOMACH_FAIL,
		STR_STOMACH_SUCCESS                                                
	));

	//Stew
	AddRecipe(Recipe(
		PID_RAGOUT,
		array<int> = {PID_MEAT, PID_XANDER_ROOT, PID_BROC_FLOWER, PID_BOWL},
		array<int> = {2, 1, 1, 1},
		array<int> = {},
		array<int> = {},
		230,
		STR_STEW_INGRIDIENT,
		STR_STEW,
		STR_STEW_FAIL,
		STR_STEW_SUCCESS                                                
	));

	//Burger
	AddRecipe(Recipe(
		PID_BURGER,
		array<int> = {PID_GECKO_MEAT, PID_FLAPJACK, PID_CABBAGE},
		array<int> = {1, 1, 1},
		array<int> = {},
		array<int> = {},
		240,
		STR_BURGER_INGRIDIENT,
		STR_BURGER,
		STR_BURGER_FAIL,
		STR_BURGER_SUCCESS                                                
	));

	//Pizza
	AddRecipe(Recipe(
		PID_PIZZA,
		array<int> = {PID_FLAPJACK, PID_MEAT, PID_BLACK_MUSHROOMS},
		array<int> = {1, 1, 1},
		array<int> = {},
		array<int> = {},
		250,
		STR_PIZZA_INGRIDIENT,
		STR_PIZZA,
		STR_PIZZA_FAIL,
		STR_PIZZA_SUCCESS                                                
	));

	//Fish Pie
	AddRecipe(Recipe(
		PID_PIROG,
		array<int> = {PID_FLAPJACK, PID_COOKED_FISH, PID_XANDER_ROOT},
		array<int> = {1, 2, 1},
		array<int> = {},
		array<int> = {},
		260,
		STR_PIE_INGRIDIENT,
		STR_FISH_PIE,
		STR_PIE_FAIL,
		STR_PIE_SUCCESS                                                
	));

	//Taco
	AddRecipe(Recipe(
		PID_BURRITO,
		array<int> = {PID_RAT_MEAT, PID_FLAPJACK, PID_BROC_FLOWER},
		array<int> = {3, 1, 2},
		array<int> = {},
		array<int> = {},
		270,
		STR_TACO_INGRIDIENT,
		STR_TACO,
		STR_TACO_FAIL,
		STR_TACO_SUCCESS                                                
	));

}

const uint[][] fryDataProtoIds = 
{	// input, output, amount
	{ PID_MEAT, PID_COOKED_MEAT, 1 },
	{ PID_POTATO, PID_POTATO_BAKED, 1 },
	{ PID_RAT_MEAT, PID_COOKED_RAT_MEAT, 1 },
	{ PID_GECKO_MEAT, PID_COOKED_GECKO_MEAT, 1 },
	{ PID_MANTIS_MEAT, PID_MANTIS_FOOD, 1 },
	{ PID_FISH_SMALLEST, PID_COOKED_FISH, 1 },
	{ PID_FISH_SMALL, PID_COOKED_FISH, 2 },
	{ PID_FISH, PID_COOKED_FISH, 4 },
	{ PID_FISH_BIG, PID_COOKED_FISH, 8 },
	{ PID_FISH_BIGGEST, PID_COOKED_FISH, 16 }
};