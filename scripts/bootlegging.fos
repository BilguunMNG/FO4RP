// Author: Anuri

#include "_macros.fos"
#include "FLAMMABLE_H.fos"

import void ExplodeEx( Map& map, uint16 hexX, uint16 hexY, uint16 effectPid, uint effectRadius, uint damage, uint damageType, uint damageRadius, uint ownerId )  from "explode";
import void InjureCritter( Critter& cr, uint dmg, uint dmgType, uint8 dir, uint attackerId ) from "combat";

const uint PIC_STILL_ANIM_ON = GetStrHash( "art\\items\\misc\\Still\\still_b_working.fofrm" );

#define STATE						Val0 	// Статус 0 - потух, 1 - заслонка 0%, 2 - заслонка 25%, 3 - заслонка 50%, 4 - заслонка 75%, 5 - заслонка 100%, 6+ - сломан+тип поломки
#define MAX_FUEL 					Val1 	// Макс допустимый заряд (верхний передел загрузки топлива) 
#define CURRENT_FUEL				Val2 	// Текущий заряд топлива
#define EVENT 						Val3 	// Для записи тайм-ивента работы аппарата
#define CRURRENT_RAW_MATERIAL		Val4	// Текущий загруз браги
#define CURRENT_TEMPRATURE			Val5	// Текущая температура
#define	CURRENT_PRESSURE			Val6	// Текущее давление
#define CRURRENT_PRODUCT			Val7	// Текущий объем спирта
#define IMPURITIES					Val8	// Уровень загрязнения аппарата
#define DETERIORATION				Val9	// Уровень износа аппарата

const uint16[] Stills = { PID_STILL_B, PID_STILL_B_ACTIVE, PID_STILL_B_BROKEN, PID_STILL_S, PID_STILL_S_ACTIVE, PID_STILL_S_BROKEN };

bool StillCheck( Critter& cr, Item@ item, Item@ target ) //exported - проверки на разное перед началом работы
{
    Map@ map = cr.GetMap();
    if( !valid( map ) ) 
    {
        return false;
    }
	if( !valid( item ) || !valid(target) )
    {
        return false;
    }
    if(	Stills.find( target.GetProtoId() ) == -1 )
    {
		return false;
    }
	if( Igniters.find( item.GetProtoId() ) != -1  )
	{
		IgniteStill( cr, item, target );
		return true;
	}
	return true;
}

bool IgniteStill( Critter& cr, Item& item, Item& target )
{
	Map@ map = cr.GetMap();
    if( !valid( map ) ) 
    {
        return false;
    }
	if( target.CURRENT_FUEL == 0 )
	{
		cr.Say( SAY_NETMSG, "|0xFFFF00 Тут нечего разжигать, найдите подходящее топливо." );
		return false;
	}
	if( target.STATE == 0 && target.CURRENT_FUEL > 0 )
	{
		if( item.GetProtoId() == PID_FLINT && Random( 1, 300 ) > cr.Skill[SK_OUTDOORSMAN] )
		{
			_SubItem( item, 1 );
			cr.Say( SAY_NETMSG, "|0xFFFF00 Вы сточили поджиг." );
		}
		target.STATE++;
		_CritAnimateUse(cr);
		cr.Say( SAY_EMOTE, "Разжигает огонь" );
		target.PicMap = PIC_STILL_ANIM_ON;
		setAnimState( target );
	}
	return true;
}

void setAnimState( Item& target )
{
	if( target.STATE == 1 )
	{	
		UNSETFLAG( target.Flags, ITEM_SHOW_ANIM_EXT );
		SETFLAG( target.Flags, ITEM_LIGHT );
		SETFLAG( target.Flags, ITEM_CAN_USE );
		UNSETFLAG( target.Flags, ITEM_CAN_PICKUP );
	}
	else
	{
		SETFLAG( target.Flags, ITEM_SHOW_ANIM_EXT );
		UNSETFLAG( target.Flags, ITEM_LIGHT );
	}
	target.Update();
}