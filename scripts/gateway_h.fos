#ifndef GATEWAY_H
#define GATEWAY_H

#define PARENT_TERMINAL			ParamBase[ TURRET_TERMINAL_ID ]
#define SECURITY_ACCESS_CARD	ParamBase[ TURRET_CARD_ID ]
#define LASER_FENCE_GRID		ParamBase[ TURRET_FENCE_GRID ]

#define DEATH_HEX_TYPE 			Val0

#define FIELD_STATE				Val0
#define EMITTER_FIELD_TYPE		Val2
#define ITM_PARENT_TERMINAL		Val6
#define PARENT_ITM_ID			Val6
#define DOOR_EVENT				Val7

#define DOOR_ID					( 0 )
#define EVENT_ON_OFF			( 1 )
#define EVENT_ID				( 2 )

#define EMITTER_DISABLED		( 0 )
#define EMITTER_ENABLED			( 1 )

#define EMITTER_FIELD_HARD		( 0 )
#define EMITTER_FIELD_SOFT		( 1 )


const string[] SoundNames = { "saber_ambient_1.ogg", "saber_ambient_2.ogg", "saber_ambient_3.ogg", "saber_ambient_4.ogg" };
const uint16[] emitterPids = { PID_EB_EMITTER_HOR0, PID_EB_EMITTER_VERT0, PID_EB_EMITTER_HOR1, PID_EB_EMITTER_VERT1, PID_EB_EMITTER_HOR2, PID_EB_EMITTER_VERT2, PID_EB_EMITTER_HOR3, PID_EB_EMITTER_VERT3 };

	#ifndef GATEWAY
		import void ToggleLaserFence( Map& map, Item& emitter, bool create ) from "gateway";
		import void ToggleForceField( Map& map, Item& emitter, bool create ) from "gateway";
		import void ToggleDoorBlocker( Map& map, Item& door, bool create ) from "gateway";
		import void SecurityDoorOpenClose( Critter& player ) from "gateway";
		import bool BlockerCheck( Critter& cr, Map& map, int& entireId ) from "gateway";
		import bool BlockerCheck( Critter& cr, Map& map, Scenery& scen ) from "gateway";
	#endif //GATEWAY

#endif //GATEWAY_H