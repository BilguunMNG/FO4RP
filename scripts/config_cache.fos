#define __CONFIG_CACHE_MODULE__
#include "config_cache_h.fos"
#include "_macros.fos"

dictionary ConfigFiles;


iConfig@ GetConfig( string& filePath )
{
	iConfig@ result = null;
	 if( !ConfigFiles.get( filePath, @result ) )
	 {
	 	// try load and cache if not cached yet
	 	@result = CreateConfig();	
	 	if( result.Parse( filePath, false ) )
	 	{
	 		ConfigFiles.set( filePath, @result );
	 	}
	 	else
	 	@result = null;
	 }

	return result;
}

string GetConfigValue ( string& cfgFileName, string& sectionName, string& cfgKey, string& defaultValue )
{
	string result = defaultValue;
	
	iConfig@ config = GetConfig( cfgFileName );
	if( valid ( config ) )
	{
		iSection@[]@ section = config.GetSections( sectionName );
		if( valid ( section ) )
		{
			iSection@ lastSec = section.last();
			if( valid ( lastSec ) )
			{
				iKey@ key = lastSec.GetKey( cfgKey );
				if( valid( key ) )
				{
					result = key.GetVal();
				} 
			}
		}
	}
	
	return result;
}