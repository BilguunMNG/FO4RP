#define DEBUG_MODULE
#include "_utils.fos"

//Обработка/переключение режимов дебага.
#include "debug_mode.fos"
	
import void AffectRadiation( Critter& cr, int value ) from "radiation";
import void ApplyMutation( Critter& cr ) from "morphes";
import void _MobInit( Critter& npc, bool firstTime ) from "mob";
import void FlushScreen( Critter& cr, uint fromColor, uint toColor, uint timeMs ) from "effects";
import void GM_MobInit( Critter& npc ) from "mob";

import void InjureCritter( Critter& cr, uint dmg, uint dmgType, uint8 dir, uint attackerId ) from "combat";

import bool AddWalkPlane( Critter& npc, uint priority, uint16 hexX, uint16 hexY, uint8 dir, bool run, uint cut ) from "npc_planes";
import void FullHeal( Critter& cr ) from "gm";

import void FullClone( Critter& target, Critter& source ) from "test";
import void _TraderInit( Critter& trader, bool firstTime ) from "trader";

import void ApplyGhoul( Critter& cr ) from "morphes";

import void ShowInputBoxScreen( Critter& cr, string funcName, uint16 textLength, uint8 flags ) from "main";
import void DropWild() from "globalmap_group";

import void arcadehiveinsert( Critter& cr, uint16 x, uint16 y, uint8 type ) from "arcade_menu";
import void arcadehivelist( Critter& cr ) from "arcade_menu";
import void arcadehiveclear( Critter& cr ) from "arcade_menu";
import void arcadehivedelone( Critter& cr, uint8 index ) from "arcade_menu";

import uint GetTile( Map& map, uint16 hexX, uint16 hexY, uint8 layer ) from "qmap";

import void ActivateMobScript( Map& map ) from "mob";

//Вынес все ГМ-команды в отдельный файл. Нужно будет реструктуризировать и сделать отдельный модуль.
#include "gm_commands.fos"

//Вынес все старые дебаг-тесты в отдельный файл. Нужно будет реструктуризировать, прочистить, или просто выкинуть нафиг за ненадобностью.
#include "debug_tests.fos"