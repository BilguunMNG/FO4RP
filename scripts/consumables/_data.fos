#ifndef CONSUMABLES_DATA_DRUG_GROUPS
#define CONSUMABLES_DATA_DRUG_GROUPS

#include "DrugGroup.fos"

void init_data() //exported
{
	init_drug_groups();
	
	init_consumables();
}

DrugGroup@ dg_healing_items, dg_painkiller, dg_heavy, dg_stress, dg_doping;
void init_drug_groups()
{
	if( !valid( dg_healing_items ) ) {
		@dg_healing_items = DrugGroup("HEALING")
			.onOverdose( Effect().add( Event_Bleed( +25 ) ) );
	}

	if( !valid( dg_painkiller ) ) {
		@dg_painkiller = DrugGroup("PAINKILLER");
	}

	if( !valid( dg_heavy ) ) {
		@dg_heavy = DrugGroup("HEAVY").addPhase( 200 ).addPhase( 200 )
			.onOverdose( Effect().add( AffectPoisonOnce( +400 ) ) )
			.set( Addiction( ADDICTION_JET, 80 ).on( Effect( 60 * 40 )
					.temporary( ST_ACTION_POINTS_EXT, -10 )
					.temporary( ST_STRENGTH_EXT, -1 )
					.temporary( ST_AGILITY_EXT, -1 )
				)
			);
	}
			
	if( !valid( dg_stress ) ) {
		@dg_stress = DrugGroup("STRESS").addPhase( 10 ).addPhase( 60 )
			.onOverdose( Effect()
				.add( Event_Knockout( 200 ) ) 
				.once( TO_TIREDNESS, +200 )
				.add( Event_Infarct( 5 ) )
			)
			.set( Addiction( ADDICTION_PSYCHO, 30 ).on( Effect( 60 * 20 )
					.temporary( ST_CHARISMA_EXT, -4 )
					.temporary( ST_ENDURANCE_EXT, -2 )
					.temporary( ST_MAX_LIFE_EXT, -30 )
					.temporary( ST_APREGEN_EXT, -100 )
				)
			);
	}
	
	if( !valid( dg_doping ) ) {
		@dg_doping = DrugGroup("DOPING").addPhase( 600 ).addPhase( 60 )
			.onOverdose( Effect()
				.add( Event_Inflict_Injury() ) 
				.add( AffectPoisonOnce( +10 * POISON_DENOMINATOR ) )
				.once( ST_CURRENT_HP, -30 ) 
			)
			.set( Addiction( ADDICTION_BUFFOUT, 60 ).on( Effect( 60 * 48 )
					.temporary( ST_STRENGTH_EXT, -2 )
					.temporary( ST_PERCEPTION_EXT, -3 )
					.temporary( ST_CHARISMA_EXT, -1 )
					.temporary( ST_INTELLECT_EXT, -1 )
					.temporary( ST_AGILITY_EXT, -1 )
					.temporary( ST_LUCK_EXT, -2 )
				)
			);		
	}
}


#endif // CONSUMABLES_DATA_DRUG_GROUPS

#ifndef CONSUMABLES_DATA_CONSUMABLES
#define CONSUMABLES_DATA_CONSUMABLES

#include "Consumables.fos"

Consumables@ consumables;

void init_consumables() 
{
	if( valid( consumables ) ) return;
	
	@consumables = Consumables()
	// .add( Consumable( PID_ )
			// .returns( PID_ )
			// .setSound(".ogg")
			// .onConsume( Effect( TIME IN MINUTES OR 0 TO USE DEFAULT VALUE FROM GROUP ) )
			// .onPhase1( Effect( TIME IN MINUTES OR 0 TO USE DEFAULT VALUE FROM GROUP ) )
			// .onPhase2( Effect( TIME IN MINUTES OR 0 TO USE DEFAULT VALUE FROM GROUP ) )
			// .setGroup( dg_heavy )
		// )
		
//no group:
	.add( Consumable( PID_MENTATS_FRUIT )
			.setSound("chewy.ogg")
			.onPhase1( Effect( 60 )
				.temporary( ST_INTELLECT_EXT, +2 )
			)
			.onPhase2( Effect( 60 * 2 ) 
				.temporary( ST_INTELLECT_EXT, -2 )
			)
	)
	.add( Consumable( PID_PEYOTE )
			.setSound("chewy.ogg")
			.onConsume( Effect()
				.add( AffectPoisonOnce( -5 * POISON_DENOMINATOR ) ) 
			)
			.onPhase1( Effect( 60 )
				.temporary( ST_PERCEPTION_EXT, -1 )
				.temporary( ST_INTELLECT_EXT, -4 )
			)
	)
	.add( Consumable( PID_RAD_X )
			.setSound("chewy.ogg")
			.onConsume( Effect()
				.add( AffectPoisonOnce( -5 * POISON_DENOMINATOR ) ) 
			)
			.onPhase1( Effect( 60 * 24 )
				.temporary( ST_RADIATION_RESISTANCE_EXT, +30 )
			)
			.onPhase2( Effect( 60 * 24 ) 
				.temporary( ST_RADIATION_RESISTANCE_EXT, +15 )
			)
	)			
	.add( Consumable( PID_RADAWAY )
			.returns( PID_HYPODERMIC_NEEDLE )
			.setSound("Stimpack.ogg")
			.onConsume( Effect()
				.once( ST_GLOBAL_OVERDOSE, +15 )
			)
			.onPhase1( Effect( 60 )
				.add( AffectRadiationOnce( -15 * RADIATION_DENOMINATOR ) ) 
				.temporary( ST_RADIATION_RESISTANCE_EXT, -20 )
			)
			.onPhase2( Effect( 60 ) 
				.add( AffectRadiationOnce( -35 * RADIATION_DENOMINATOR ) ) 
				.temporary( ST_RADIATION_RESISTANCE_EXT, -10 )
			)				
	)			
	.add( Consumable( PID_RAD_LX )
			.setSound("solopill.ogg")
			.onPhase1( Effect( 60 * 24 )
				.once( ST_DRUNK, +30 ) 
				.temporary( ST_RADIATION_RESISTANCE_EXT, +40 )
			)
			.onPhase2( Effect( 60 * 24 ) 
				.temporary( ST_RADIATION_RESISTANCE_EXT, -40 )
			)
	)		
	.add( Consumable( PID_VOCAS_EXTRACT )
			.setSound("Stimpack.ogg")
			.onPhase1( Effect( 60 * 2 )
				.temporary( ST_ENDURANCE_EXT, -2 )
				.add( AffectRadiationOnce( -5 * RADIATION_DENOMINATOR ) ) 
				
			)
			.onPhase2( Effect( 60 * 3 ) 
				.temporary( ST_ENDURANCE_EXT, -4 )
				.add( AffectRadiationOnce( -5 * RADIATION_DENOMINATOR ) ) 
			)
	)		
	.add( Consumable( PID_FPASLNC )
			.returns( PID_BOTTLE_GLASS )
			.setSound("solopill.ogg")
			.onPhase1( Effect( 30 )
				.once( ST_DRUNK, -25 ) 
				.add( AffectPoisonOnce( +5 * POISON_DENOMINATOR ) ) 
				.add( AffectRadiationOnce( -5 * RADIATION_DENOMINATOR ) ) 
				
			)
			.onPhase2( Effect( 30 ) 
				.once( ST_DRUNK, -25 ) 
				.add( AffectPoisonOnce( -5 * POISON_DENOMINATOR ) ) 
				.add( AffectRadiationOnce( -5 * RADIATION_DENOMINATOR ) ) 
			)
	)		
	.add( Consumable( PID_ANTIDOTE )
			.returns( PID_BOTTLE_GLASS )
			.setSound("solopill.ogg")
			.onConsume( Effect()
				.once( ST_GLOBAL_OVERDOSE, +15 )
			)
			.onPhase1( Effect( 30 )
				.add( AffectPoisonOnce( -25 * POISON_DENOMINATOR ) ) 
				.temporary( ST_POISON_RESISTANCE_EXT, 50 )
			)
			.onPhase2( Effect( 60 ) 
				.temporary( ST_POISON_RESISTANCE_EXT, 25 )
			)
	)			
	.add( Consumable( PID_JET_ANTIDOTE )
			.returns( PID_BOTTLE_GLASS )
			.setSound("solopill.ogg")
			.onConsume( Effect().add( Event_Antidote() ) )
	)
	.add( Consumable( PID_PILLS )
			.returns( PID_PHIAL )
			.setSound("solopill.ogg")
			.onConsume( Effect().add( Event_Pills() ) )
	)
	.add( Consumable( PID_ANTIDOTE_2 )
			.returns( PID_HYPODERMIC_NEEDLE )
			.setSound("Stimpack.ogg")
			.onConsume( Effect().add( Event_ParalysisAntidote() ) )
	)	
	.add( Consumable( PID_HYPO_POISON )
			.returns( PID_HYPODERMIC_NEEDLE )
			.setSound("Stimpack.ogg")
			.onConsume( Effect().add( Event_ParalysisPoison() ) )
	)	
//dg_healing_items
	.add( Consumable( PID_TRAUMATIN )
			.onConsume( Effect().add( Event_UseHealingItem(PID_TRAUMATIN) ) )
			.autoConsumable(true)
			.setGroup( dg_healing_items )
	)
	.add( Consumable( PID_SUPER_STIMPAK )
			.onConsume( Effect().add( Event_UseHealingItem(PID_SUPER_STIMPAK) ) )
			.autoConsumable(true)
			.setGroup( dg_healing_items )
	)
	.add( Consumable( PID_STIMPAK )
			.onConsume( Effect().add( Event_UseHealingItem(PID_STIMPAK) ) )
			.autoConsumable(true)
			.setGroup( dg_healing_items )
	)
	.add( Consumable( PID_HEALING_POWDER )
			.onConsume( Effect().add( Event_UseHealingItem(PID_HEALING_POWDER) ) )
			.autoConsumable(true)
			.setGroup( dg_healing_items )
	)
//dg_painkiller
	.add( Consumable( PID_PAINKILLERS )
			.returns( PID_HYPODERMIC_NEEDLE )
			.setSound("Stimpack.ogg")
			.onPhase1( Effect( 30 ).temporary( CR_PAINKILLER, +1 ) )
			.setGroup( dg_painkiller )
	)
	.add( Consumable( PID_ASPIRIN )
			.returns( PID_BOTTLE_GLASS )
			.setSound("solopill.ogg")
			.onPhase1( Effect( 15 ).temporary( CR_PAINKILLER, +1 ) )
			.setGroup( dg_painkiller )
	)
//dg_heavy
	.add( Consumable( PID_JET )
			.setSound("jet.ogg")
			.returns( PID_EMPTY_JET )
			.onConsume( Effect()
				.once( ST_CURRENT_HP, +40 ) 
				.once( ST_GLOBAL_OVERDOSE, +20 )
			)
			.onPhase1( Effect()
				.temporary( CR_JETTED, +1 )
				.temporary( ST_ACTION_POINTS_EXT, +25 )
			)
			.onPhase2( Effect() 
				.temporary( ST_ACTION_POINTS_EXT, -25 )
			)
			.setGroup( dg_heavy )
		)
	.add( Consumable( PID_TREB )
			.returns( PID_EMPTY_JET )
			.setSound("jet.ogg")
			.onConsume( Effect()
				.add( AffectPoisonOnce( +35 * POISON_DENOMINATOR ) ) 
				.add( AffectRadiationOnce( +10 * RADIATION_DENOMINATOR ) ) 
				.once( ST_GLOBAL_OVERDOSE, +35 ) 
			)
			.onPhase1( Effect()
				.temporary( CR_JETTED, +1 )
				.temporary( ST_ACTION_POINTS_EXT, +20 )
				.temporary( ST_MELEE_DAMAGE_EXT, +8 )
			)
			.onPhase2( Effect() 
				.temporary( ST_ACTION_POINTS_EXT, -10 )
			)
			.setGroup( dg_heavy )
		)
	.add( Consumable( PID_VINT )
			.returns( PID_EMPTY_JET )
			.setSound("jet.ogg")
			.onConsume( Effect()
				.add( AffectPoisonOnce( +35 * POISON_DENOMINATOR ) ) 
				.add( AffectRadiationOnce( +10 * RADIATION_DENOMINATOR ) ) 
				.once( ST_GLOBAL_OVERDOSE, +10 ) 
			)
			.onPhase1( Effect()
				.temporary( ST_ACTION_POINTS_EXT, +10 )
				.temporary( ST_LUCK_EXT, -2 )
				.temporary( CR_JETTED, +1 )
			)
			.onPhase2( Effect() 
				.temporary( ST_ACTION_POINTS_EXT, -10 )
				.temporary( ST_LUCK_EXT, -2 )
			)
			.setGroup( dg_heavy )
		)
	/*.add( Consumable( "Что-то" )
			.setSound("jet.ogg")
			.returns( PID_EMPTY_JET )
			.onConsume( Effect()
				.add( AffectPoisonOnce( +10 * POISON_DENOMINATOR ) ) 
				.once( ST_GLOBAL_OVERDOSE, +15 ) 
			)
			.onPhase1( Effect()
				.temporary( ST_ACTION_POINTS_EXT, -10 )
				.temporary( ST_MELEE_DAMAGE_EXT, -4 )
				.temporary( CR_JETTED, +1 )
			)
			.onPhase2( Effect() 
				.temporary( ST_ACTION_POINTS_EXT, +5 )
			)
			.setGroup( dg_heavy )
		)*/
//dg_stress
	.add( Consumable( PID_PSYCHO )
			.returns( PID_HYPODERMIC_NEEDLE )
			.setSound("Stimpack.ogg")
			.onConsume( Effect()
				.once( ST_CURRENT_HP, +20 ) 
				.add( Event_Revive() )
				.add( Event_Cure_Injuries() ) 
				.add( Event_Fix_Limbs() ) 
				.setState( ST_BLEED, 0 )
				.once( ST_GLOBAL_OVERDOSE, +6 ) 
			)
			.onPhase1( Effect()
				.temporary( ST_APREGEN_EXT, +200 )
				.temporary( ST_MELEE_DAMAGE_EXT, +4 )
				.temporary( ST_CRIT_RES, +10 )
				.add( Change_Damage_Resistance( +6 ) )
				.add( Change_Damage_Threshold( +2 ) )
				.temporary( ST_ARMOR_CLASS_EXT, +10 )
				.temporary( ST_RUN_TIME_EXT, -10 )//+5% running speed
			)
			.onPhase2( Effect() 
				.temporary( ST_APREGEN_EXT, -100 )
				.temporary( ST_INTELLECT_EXT, -4 )
				.temporary( ST_CRIT_RES, -100 )
				.temporary( ST_ARMOR_CLASS_EXT, -100 )
			)
			.setGroup( dg_stress )
		)		
	.add( Consumable( PID_AFTERBURNER_GUM )
			.setSound("chewy.ogg")
			.onConsume( Effect()
				.once( ST_CURRENT_HP, +20 ) 
				.setState( ST_BLEED, 0 )
				.once( ST_GLOBAL_OVERDOSE, +6 ) 
			)
			.onPhase1( Effect()
				.temporary( ST_APREGEN_EXT, +200 )            
				.temporary( ST_ARMOR_CLASS_EXT, +15 )
				.temporary( ST_RUN_TIME_EXT, -16 )//+8% running speed
			)
			.onPhase2( Effect() 
				.temporary( ST_APREGEN_EXT, -100 )
				.temporary( ST_RUN_TIME_EXT, +10 )//-5% running speed
			)
			.setGroup( dg_stress )
		)		
	.add( Consumable( PID_VOKAS )
			.returns( PID_METAL_CAN )
			.setSound("chewy.ogg")
			.onConsume( Effect()
				.once( ST_CURRENT_HP, +20 ) 
				.once( ST_GLOBAL_OVERDOSE, +12 ) 
				.add( AffectRadiationOnce( +20 * RADIATION_DENOMINATOR ) ) 
				
			)
			.onPhase1( Effect()
				.temporary( ST_APREGEN_EXT, +100 )             		
				.temporary( ST_MELEE_DAMAGE_EXT, +4 )          
				.temporary( ST_CRIT_RES, +25 )                  
				.add( Change_Damage_Resistance( +7 ) )
				.add( Change_Damage_Threshold( +3 ) )
				.temporary( ST_ARMOR_CLASS_EXT, -15 )          
			)
			.onPhase2( Effect()                               
				.temporary( ST_APREGEN_EXT, -100 )           
				.temporary( ST_INTELLECT_EXT, -4 )           
				.temporary( ST_CRIT_RES, -100 )                 
				.temporary( ST_ARMOR_CLASS_EXT, -100 )       
			)
			.setGroup( dg_stress )
		)		
	/*.add( Consumable( Что-то )
			.setSound("chewy.ogg")
			.onConsume( Effect()
				.add( Event_Knockout( 100 ) )
				.once( ST_GLOBAL_OVERDOSE, +24 ) 
			)
			.onPhase1( Effect()
				.temporary( ST_APREGEN_EXT, -100 )             		
			)
			.onPhase2( Effect()                               
				.temporary( ST_APREGEN_EXT, +50 ) 
				.temporary( ST_CHARISMA_EXT, +4 )
				.temporary( ST_ENDURANCE_EXT, +2 )
			)
			.setGroup( dg_stress )
		)*/
//dg_doping
	/*.add( Consumable( Что-то )
			.setSound("solopill.ogg")
			.onConsume( Effect()
				.once( ST_GLOBAL_OVERDOSE, +20 ) 
			)
			.onPhase1( Effect()
				.temporary( ST_STRENGTH_EXT, +2 )
				.temporary( ST_PERCEPTION_EXT, +2 )
				.temporary( ST_CHARISMA_EXT, +2 )
				.temporary( ST_AGILITY_EXT, +2 )
			)
			.onPhase2( Effect()                               
				.temporary( ST_POISON_RESISTANCE_EXT, -10 )           
				.temporary( ST_RADIATION_RESISTANCE_EXT, -10 )           
			)
			.setGroup( dg_doping )
		)*/
	.add( Consumable( PID_MENTATS )
			.setSound("solopill.ogg")
			.onConsume( Effect()
				.once( ST_GLOBAL_OVERDOSE, +30 ) 
				.add( AffectPoisonOnce( +10 * POISON_DENOMINATOR ) )
			)
			.onPhase1( Effect()
				.temporary( ST_PERCEPTION_EXT, +2 )
				.temporary( ST_INTELLECT_EXT, +3 )
				.temporary( ST_CHARISMA_EXT, +2 )
				.temporary( ST_AGILITY_EXT, -1 )
			)
			.onPhase2( Effect()                               
				.temporary( ST_AGILITY_EXT, -2 )
				.temporary( ST_POISON_RESISTANCE_EXT, -100 )           
			)
			.setGroup( dg_doping )
		)		
	.add( Consumable( PID_BUFFOUT )
			.setSound("solopill.ogg")
			.onConsume( Effect()
				.once( ST_GLOBAL_OVERDOSE, +30 ) 
				.add( AffectRadiationOnce( +20 * RADIATION_DENOMINATOR ) ) 
			)
			.onPhase1( Effect()
				.temporary( ST_STRENGTH_EXT, +3 )
				.temporary( ST_ENDURANCE_EXT, +3 )
				.temporary( ST_HEALING_RATE_EXT, +10 )
				.temporary( ST_INTELLECT_EXT, -2 )
			)
			.onPhase2( Effect()                               
				.temporary( ST_AGILITY_EXT, -2 )
				.temporary( ST_RADIATION_RESISTANCE_EXT, -100 )           
			)
			.setGroup( dg_doping )
		)		
	/*.add( Consumable( Что-то )
			.setSound("solopill.ogg")
			.onConsume( Effect()
				.once( ST_GLOBAL_OVERDOSE, +10 ) 
				.add( AffectRadiationOnce( +10 * RADIATION_DENOMINATOR ) ) 
				.add( AffectPoisonOnce( +10 * POISON_DENOMINATOR ) )
			)
			.onPhase1( Effect()
				.temporary( ST_HEALING_RATE_EXT, -5 )
			)
			.onPhase2( Effect()                               
				.temporary( ST_STRENGTH_EXT, +1 )
				.temporary( ST_PERCEPTION_EXT, +1 )
				.temporary( ST_LUCK_EXT, +1 )
			)
			.setGroup( dg_doping )
		)*/		
	;
}

#endif // CONSUMABLES_DATA_CONSUMABLES




