#ifndef CONSUMABLES_MENU
#define CONSUMABLES_MENU

void unsafe_menu( Critter& cr, int id, int, int, string@, int[]@ )
{
	Critter@ target = @cr;
	if( isGM( cr ) && id != 0 )
	{
		@target = GetCritter(id);
		if( !valid( target ) )
			@target = @cr;
	}
    iDialogBox@ menu = OpenMenu( cr, "Drugs", MenuDrugs( target ) );
}

///Открывается командой ~drugs клиентом (у ГМов так же по курсору и айди).
///Отображает список текущих ActiveDrug: имя, cte_uid, стадии, время.
///Нажатие на кнопки (ГМом) скипает текущую стадию до её конца.

class MenuDrugs: CenteredMenuHandler //TODO: Локализация
{
	Critter@ target;
	ActiveDrug@[] drugs;
	bool delayed_refresh;
	
	MenuDrugs( Critter@ target )
	{
		@this.target = @target;
		drugs = enlistAllActiveDrugs(target);
	}

	bool MenuUpdate( Critter& cr, iDialogBox& menu ) 
	{		
		for( uint i = 0, len = drugs.length(); i < len; i++ )
		{
			ActiveDrug@ drug = drugs[i];
			string name = "#" + drug.event_id() + " [" + drug.phase() + "]" + " '" + cut_name(itemName(drug.pid())) + "' ";
			string time = DeltaTime_HMS_short( uint( drug.time_left() / __TimeMultiplier ) );
			
			if( menu.Button( name + time ) )
			{
				if( isGM( cr ) )
				{
					skipStage( target, drug );
				}
				
				drugs = enlistAllActiveDrugs(target); //Покажет "now".
				delayed_refresh = true;				  //После задержки обновления, покажет результат пропуска стадии.
				
				return true;
			}
		}

		return true;
	}

    int getDescriptionFile()
    {
    	return TEXTMSG_TEXT;
    }

	int getDescriptionLine()
	{
		return 0;
	}
	
	string@ Description( Critter& cr ) 
	{
		string info = "Current addictions:" + YELLOW;
		for( uint i = ADDICTION_BEGIN; i <= ADDICTION_END; i++ )
			if( target.Addiction[i] != 0 )
				info += " " + PARAM_NAME(i);//TODO: More User friendly output + language dependent.
			
		return info;
	}
	
	bool ShouldRedraw( Critter& cr )
	{
		if( delayed_refresh )
		{
			delayed_refresh = false;
			drugs = enlistAllActiveDrugs(target);
			
			return true;
		}
		
		return false;
    }
}

#endif