#define HEXX 472
#define HEXY 341

import void add_lazer( Critter& cr, int p0, int p1, int p2 ) from 	"gateway";
import void del_lazer( Critter& cr, int p0, int p1, int p2 ) from	"gateway";

bool ProcessTerminal( Critter& cr, Scenery@ terminal )
{
	if( valid( terminal ) && terminal.ProtoId == PID_TERMINAL )
	{
		OpenMenu( cr, "Терминал", MenuTerminal() );
		return true;
	}
	return false;
}

#ifndef __GATEWAY_UTILS
	
	#define __GATEWAY_UTILS
	bool getStateLazer( Critter& cr ) { return getStateLazer( cr.GetMap() ); }
	bool getStateLazer( Map@ map )
	{
		return valid( map ) && valid( map.GetItem( HEXX, HEXY, PID_LAZER_FENCE_NS) );
	}

	bool getStateTurels(Map@ map, uint pid)
	{
		Critter@[] crs;
		int countCr = map.GetCritters(pid, FIND_LIFE, crs);
		return ( countCr != 0 );
	}

	Critter@[] getCritters(Map@ map, uint pid, uint find)
	{	
		Critter@[] crs;
		int countCr = map.GetCritters(pid, find, crs);
		return crs;	
	}
	
#endif

import void unsafe_sleep( Critter& player, int isBack, int isRemote, int param2, string@ param3, int[] @ param4 ) from "general_unsafe";

class MenuTerminal: CenteredMenuHandler {
	MenuTerminal() {}

	bool MenuUpdate( Critter& cr, iDialogBox& menu )
	{
		uint turretPID = PID_LAS_TURRET;
		bool LazerOn = getStateLazer(cr);		
		
        string info = (!LazerOn) ? "Включить" : "Выключить";
        if( menu.Button( "Лазер: " + info ) )
        {
            if( !LazerOn ) //Если выключен:
            {
                cr.Say( SAY_NETMSG, "Включил лазерный забор" );    
                add_lazer( cr, 0, 0, 0 );
				return false;
            }
            else //Если включён:
            {        
                cr.Say( SAY_NETMSG, "Выключил лазерный забор" );    
                del_lazer( cr, 0, 0, 0 );
				return false;
            }
        }
		
		bool turrets = getStateTurels(cr.GetMap(), turretPID);
		
		info = ( !turrets ? "Включить" : "Выключить" );
		if( menu.Button("Турели " + info ) )
		 {	
			if (turrets) //если туррели работают, то выкл логику турелей
			{
				cr.Say( SAY_NETMSG, "Выключил Охрану" );   
				
				Critter@[] crs = getCritters(cr.GetMap(), turretPID, FIND_LIFE);
				for( uint i = 0, countCr = crs.length(); i < countCr; i++ )
					unsafe_sleep( crs[i], 0, 1, 1, null, null );				
			}
			else //если в нокауте, вкл логику турелей
			{
				cr.Say( SAY_NETMSG, "Включил Охрану" );    

				Critter@[] crs = getCritters(cr.GetMap(), turretPID, FIND_KO);
				for( uint i = 0, countCr = crs.length(); i < countCr; i++ )
					unsafe_sleep( crs[i], 0, 1, 0, null, null );				
			}
			
			return false;//если "return false;" то меню закроется
		}
		
		return true;
	}

	string@ Description(Critter& cr) 
	{
		return "Добро пожаловать, пользователь #" + cr.Id + ", в этом окне вы можете вкл/выкл систему защиты ворот города.";
	}
}