#define HEXX 472
#define HEXY 341

import void add_lazer( Critter& cr, int p0, int p1, int p2 ) from 	"gateway";
import void del_lazer( Critter& cr, int p0, int p1, int p2 ) from	"gateway";

bool ProcessTerminal( Critter& cr, Scenery@ terminal )
{
	if( valid( terminal ) && terminal.ProtoId == PID_TERMINAL )
	{
		cr.Say( SAY_EMOTE, "Работает с терминалом" );
		OpenMenu( cr, "Терминал", MenuTerminal() );
		return true;
	}
	return false;
}

bool IsSwitchOn(Critter& cr){
	Map@ map = cr.GetMap();
	
	if (!valid( map.GetItem(HEXX, HEXY, PID_LAZER_FENCE_NS))){
		
		cr.Say( SAY_EMOTE, "Включил лазер" );	
		add_lazer( cr, 0, 0, 0 );
		return true;
		
	}
	else
	{		
		cr.Say( SAY_EMOTE, "Выключил лазер" );	
		del_lazer( cr, 0, 0, 0 );
		return false;
	}
}

bool IsKnockout(Critter& cr){
	Map@ map = cr.GetMap();
	
	if (!valid( map.GetItem(HEXX, HEXY, PID_LAZER_FENCE_NS))){
		
		cr.Say( SAY_EMOTE, "Включил турель" );	
		add_lazer( cr, 0, 0, 0 );
		return true;
		
	}
	else
	{		
		cr.Say( SAY_EMOTE, "Выключил турель" );	
		del_lazer( cr, 0, 0, 0 );
		return false;
	}
}

class MenuTerminal: CenteredMenuHandler {
	MenuTerminal() {}

	bool MenuUpdate( Critter& cr, iDialogBox& menu )
	{
		
		if( menu.Button("Лазер " + ( (IsSwitchOn(cr)) ? "ВЫКЛ" : "ВКЛ") ) )
			return true; 
		
		if( menu.Button("Турель " + ( (IsKnockout(cr)) ? "в нокауте" : "вкл" ) ) )
		 {	
			// if (IsKnockout) //выключить логику турели
			// else //включить логику турели
			return true;//если "return false;" то меню закроется
		}
		
		return true;
	}

	string@ Description(Critter& cr) 
	{
		return "Добро пожаловать, пользователь #" + cr.Id + ", в этом окне вы можете вкл/выкл систему защиты ворот города.";
		//return "Добро пожаловать, пользователь #" + cr.Id + ", пожалуйста вставьте дискету для установки ОС и нажмите |0xFFFF00 REPEAT |0x00FF00 .";
	}
}