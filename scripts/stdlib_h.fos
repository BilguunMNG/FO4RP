#ifndef STDLIB_H
#define STDLIB_H

// Npc scan radius
#define WARN_DIST                ( 10 )

// Roll vs skill
#define ROLL_CRITICAL_FAILURE    ( 0 )
#define ROLL_FAILURE             ( 1 )
#define ROLL_SUCCESS             ( 2 )
#define ROLL_CRITICAL_SUCCESS    ( 3 )

	#ifdef __SERVER
	#ifndef STDLIB_MODULE
		import void KnockoutOnce( Critter& cr, uint AP ) from "stdlib";
		import void KnockoutOnce( Critter& cr, bool front, uint AP ) from "stdlib";		
		import void KnockoutOnce( Critter& cr, bool front, uint AP, uint16 x, uint16 y ) from "stdlib";
		import int RollVsSkill( Critter& cr, uint skillIndex, int bonus ) from "stdlib";
		import bool IsSuccessRvS( int val ) from "stdlib";
		import bool IsCriticalRvS( int val ) from "stdlib";
		import void HealCritter( Critter& player ) from "stdlib";
		import bool TransitToLoc( Critter& cr, uint16 locPid, uint mapIndex, uint entranceNum ) from "stdlib";
		import bool TransitToMap( Critter& cr, uint16 mapPid, uint entranceNum ) from "stdlib";
		import bool TransitToNewLocation( Critter& cr, uint16 locPid ) from "stdlib";
		import void InfoMessage( Critter& player, Critter& npc, uint strNum ) from "stdlib";
		import void NpcMessageNorm( Critter& npc, uint strNum ) from "stdlib";
		import void NpcMessageShout( Critter& npc, uint strNum ) from "stdlib";
		import void NpcMessageWhisp( Critter& npc, uint strNum ) from "stdlib";
		import void NpcMessageEmo( Critter& npc, uint strNum ) from "stdlib";
		import void TimeoutSet( Critter& npc, int timeoutNumber, uint gameHours ) from "stdlib";
		import void TimeoutSub( Critter& npc, uint gameHoursSub ) from "stdlib";
		import void TimeoutAdd( Critter& npc, uint gameHoursAdd ) from "stdlib";
		import void GroupSetVar( Critter& player, uint16 varId, int value ) from "stdlib";
		import void Warn( Critter& player, int npcRole ) from "stdlib";
		import void DoorControl( Critter& player, uint entireNum, bool toOpen ) from "stdlib";
		import bool DialogNpc( Critter& player, int role ) from "stdlib";
		import Critter@ GetNearCritterWithRole( Map@ map, uint16 hexX, int hexY, uint radius, int role ) from "stdlib";
	#endif // STDLIB_MODULE
	#endif // __SERVER
	
#endif // STDLIB_H