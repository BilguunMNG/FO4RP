#include "_itempid.fos"
#include "_macros.fos"

bool s_InitCook( Critter& cr, Scenery& scen, int skill, Item@ item )
{
    if( item is null )
    {
        Log( "itemnull" );
        return false;
    }
    LighterOnFire( cr, item, scen );

    return true;
}

bool LighterOnFire( Critter& cr, Item& lighter, Scenery& fire )
{
    if( lighter.GetProtoId() != PID_LIGHTER )
        return false;
    else if( !CanCook( fire ) )
        return false;
    else
    {
        return true;
    }
}

bool UseCookingStuff( Scenery& fire, Critter& cr )
{
    if( !CanCook( fire ) )
    {
        return false;
    }
    else
    {
        AskCooking(cr);
    }

    return true;
}

bool CanCook( Scenery@ fire ) // проверка на костер/бочку/плиту
{
    if( !valid( fire ) )
        return false;
    uint16 pid = fire.ProtoId;
    return pid == 2001 || pid == 2612 || pid == 2682 || pid == 2683 || pid == 2684 ||
           pid == 2685 || pid == 3822 || pid == 3823 || pid == 3824 || pid == 3825;
}

//import void AskCooking( Critter& cr ) from "cooking";
void AskCooking( Critter& cr ) //exported
{
	cr.ShowScreen( SCREEN_DIALOGBOX, 3, "cooking@answer_COOKING" );
	cr.Say( SAY_DIALOGBOX_TEXT, "Выберите действие" );
	cr.Say( SAY_DIALOGBOX_BUTTON( 0 ), "погреться" );
	cr.Say( SAY_DIALOGBOX_BUTTON( 1 ), "приготовить еду" );
	cr.Say( SAY_DIALOGBOX_BUTTON( 2 ), "пожарить" );
}

void answer_COOKING( Critter& cr, uint answerI, string& answerS )
{
	if( !CookingActions( cr, answerI ) )
	{
		cr.Say( SAY_NETMSG, "Из этого ничего не вышло." );
	}
}

bool CookingActions( Critter& cr, uint answer )
{
	switch( answer )
	{
		case( 0 ): return GetCraftToken( cr );
		case( 1 ): return CookingMenu( cr );
		case( 2 ): return FastFrying( cr );
		default: return false;
	}
	return false;
}


bool GetCraftToken( Critter& cr )
{
	cr.Say( SAY_EMOTE, "Греет руки" );
	
	Map@ map = cr.GetMap();
	if(!valid(map)) return false;
	
	Item@ Workplace;
	@Workplace = map.GetItem( cr.HexX, cr.HexY, PID_GRAPPLE_HOOK );
	
	if( !valid( Workplace ) )
		@Workplace = cr.GetMap().AddItem( cr.HexX, cr.HexY, PID_GRAPPLE_HOOK, 1 );

	if( !valid( Workplace ) )
		return false;
	
	Workplace.SetScript( "item@_WorkplaceInit" );
	
	if( cr.CountItem( PID_FIREPLACE_TOKEN ) == 0 ) cr.AddItem( PID_FIREPLACE_TOKEN, 1 );
	cr.ShowScreen( SCREEN_FIXBOY, 0, "" );
	return true;
}

bool FastFrying( Critter& cr )
{
    Item@ item = _CritGetItemHand( cr );
    if( !valid( item ) )
    {
        cr.Say( SAY_NETMSG, "Для этого вам понадобиться мясо в руках." );
        return true;
    }

	//TODO: Нормальная структура.
	string name = "еду";
	switch( item.GetProtoId() )
	{
		case PID_MEAT:
			_CritAddItem( cr, PID_COOKED_MEAT, 1 );
			name = "мясо";
			break;
		case PID_RAT_MEAT:
			_CritAddItem( cr, PID_COOKED_RAT_MEAT, 1 );
			name = "крысятину";
			break;
		case PID_GECKO_MEAT:
			_CritAddItem( cr, PID_COOKED_GECKO_MEAT, 1 );
			name = "гекконятину";
			break;
		case PID_MANTIS_MEAT:
			_CritAddItem( cr, PID_MANTIS_FOOD, 1 );
			name = "лапку богомола";
			break;
		case PID_FISH_SMALLEST:
			_CritAddItem( cr, PID_COOKED_FISH, 1 );
			name = "рыбешку";
			break;
		case PID_FISH_SMALL:
			_CritAddItem( cr, PID_COOKED_FISH, 2 );
			name = "рыбку";
			break;
		case PID_FISH:
			_CritAddItem( cr, PID_COOKED_FISH, 3 );
			name = "рыбу";
			break;
		case PID_FISH_BIG:
			_CritAddItem( cr, PID_COOKED_FISH, 4 );
			name = "рыбищу";
			break;
		case PID_FISH_BIGGEST:
			_CritAddItem( cr, PID_COOKED_FISH, 5 );
			name = "огромную рыбу";
			break;
		default:
			cr.Say( SAY_NETMSG, "Даже после обжарки эта вещь будет несъедобна." );
			return true;
	}
    cr.Say( SAY_NETMSG, "Вы успешно пожарили " + name + "." );
    _SubItem( item, 1 );
	return true;
}

bool CookingMenu( Critter& cr )
{
	uint16 count = 0;
	if( cr.Skill[ SK_OUTDOORSMAN ] < 100 )
		cr.Say( SAY_NETMSG, "Вы не знаете ни одного полезного рецепта для готовки." );
	if( cr.Skill[ SK_OUTDOORSMAN ] >= 100 )
		count += 2;
	if( cr.Skill[ SK_OUTDOORSMAN ] >= 125 )
		count += 2;
	if( cr.Skill[ SK_OUTDOORSMAN ] >= 150 )
		count += 2;
	if( cr.Skill[ SK_OUTDOORSMAN ] >= 175 )
		count += 2;
	if( cr.Skill[ SK_OUTDOORSMAN ] >= 200 )
		++count;

	cr.ShowScreen( SCREEN_DIALOGBOX, count, "cooking@answer_PATTERN" );
	cr.Say( SAY_DIALOGBOX_TEXT, "Выберите рецепт:" );
	
	string[] foodNames = { "Салат", "Шашлык", "Лепешка", "Желудок", "Рагу", "Бургер", "Пицца", "Пирог", "Тако" };
	for( uint8 i = 0; i < count; i++ )
		cr.Say( SAY_DIALOGBOX_BUTTON( i ), foodNames[ i ] );
	
	return true;
}

void answer_PATTERN( Critter& cr, uint answerI, string& answerS )
{
    if( answerI == 0 )     // салат
    {
        if( _CritCountItem( cr, PID_ALGAE ) > 1 && _CritCountItem( cr, PID_MUTATED_FRUIT ) > 0 )
        {
            _CritDeleteItem( cr, PID_MUTATED_FRUIT, 1 );
            _CritDeleteItem( cr, PID_ALGAE, 2 );
            _CritAddItem( cr, PID_SALAD, 1 );
            cr.Say( SAY_NETMSG, "Вы приготовили вкусный салат, потратив мутофрукт и пару водорослей.." );
        }
      else if( _CritCountItem( cr, PID_ALGAE ) < 2 )
            cr.Say( SAY_NETMSG, "Вы считаете, что сушеные водоросли хорошо пойдут в салат." );
      else if( _CritCountItem( cr, PID_MUTATED_FRUIT ) == 0 )
            cr.Say( SAY_NETMSG, "Вам кажется, что мутафрукт идеально подходит к водорослям." );
    }

    if( answerI == 1 ) // шашлык
    {
        if( _CritCountItem( cr, PID_MEAT ) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 )
        {
            _CritDeleteItem( cr, PID_MEAT, 1 );
            _CritDeleteItem( cr, PID_XANDER_ROOT , 1 );
            _CritAddItem( cr, PID_MEAT_ON_A_STICK, 1 );
            cr.Say( SAY_NETMSG, "Вы приготовили сочный шашлык, приправив мясо корнем зандера." );
        }
        else if( _CritCountItem( cr, PID_MEAT ) == 0 )
            cr.Say( SAY_NETMSG, "Все-таки даже для такого шашлыка вам понадобится мясо." );
        else if(_CritCountItem( cr, PID_XANDER_ROOT ) == 0) 
            cr.Say( SAY_NETMSG, "Вам кажется, что корень Зандера не помешает." );
    }
    if( answerI == 2 )     // кукурузная лепешка
    {
        if( _CritCountItem( cr, PID_CORN) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 )
        {
            _CritDeleteItem( cr, PID_CORN, 1 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
            _CritAddItem( cr, PID_FLAPJACK, 1 );
            cr.Say( SAY_NETMSG, "Вы приготовили аппетитную кукурузную лепешку, смешав кукурузу и корень зандера." );
        }
       else if( _CritCountItem( cr, PID_CORN ) == 0 )
            cr.Say( SAY_NETMSG, "Для начала вам понадобится кукуруза." );
       else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
            cr.Say( SAY_NETMSG, "Вам кажется, что корень Зандера не помешает." );
    }
    if( answerI == 3 )     // фаршированный желудок
    {
        if( _CritCountItem( cr, PID_MEAT ) > 0 && _CritCountItem( cr, PID_MOLERAT_STOMATCH ) > 0 && _CritCountItem( cr, PID_BROC_FLOWER ) > 1 )
        {
            _CritDeleteItem( cr, PID_BROC_FLOWER, 2 );
            _CritDeleteItem( cr, PID_MEAT, 1 );
            _CritDeleteItem( cr, PID_MOLERAT_STOMATCH, 1 );
            _CritAddItem( cr, PID_COOKED_MOLERAT_STOMATCH, 1 );
            cr.Say( SAY_NETMSG, "Вам удалось приготовить фаршированный желудок, израсходовав кусок мяса, пару цветков брока, ну и сам желудок." );
        }
       else if( _CritCountItem( cr, PID_MOLERAT_STOMATCH ) == 0 )
            cr.Say( SAY_NETMSG, "Для начала вам понадобится желудок кротокрыса." );
       else if( _CritCountItem( cr, PID_MEAT ) == 0 )
            cr.Say( SAY_NETMSG, "Вам кажется, что мясо пойдет как отличное наполнение желудка." );
      else if( _CritCountItem( cr, PID_BROC_FLOWER ) < 2 )
            cr.Say( SAY_NETMSG, "Побольше цветка Брока в виде приправы - лучший выбор выживальца." );
	}

    if( answerI == 4 ) // мясное рагу
    {
        if( _CritCountItem( cr, PID_MEAT ) > 1 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 && _CritCountItem( cr, PID_BROC_FLOWER ) > 0)
        {
            _CritDeleteItem( cr, PID_MEAT, 2 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
            _CritDeleteItem( cr, PID_BROC_FLOWER, 1 );
            _CritAddItem( cr, PID_RAGOUT, 1 );
            cr.Say( SAY_NETMSG, "Вы приготовили прекрасное рагу из пары кусков мяса, цветка брока и корня зандера." );
        }
       else if( _CritCountItem( cr, PID_MEAT ) < 2 )
            cr.Say( SAY_NETMSG, "Как рагу может быть мясным без пары кусков хорошего мяса?" );
       else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
            cr.Say( SAY_NETMSG, "Приправа в виде корня Зандера - вы думаете это неплохо." );
      else if( _CritCountItem( cr, PID_BROC_FLOWER ) == 0 )
            cr.Say( SAY_NETMSG, "Немного цветка Брока завершит это блюдо." );
    }

    if( answerI == 5 ) // Бургер из Геккона
    {
        if( _CritCountItem( cr, PID_GECKO_MEAT  ) > 0 && _CritCountItem( cr, PID_FLAPJACK ) > 0 && _CritCountItem( cr, PID_ALGAE ) > 0)
        {
            _CritDeleteItem( cr, PID_GECKO_MEAT , 1 );
            _CritDeleteItem( cr, PID_FLAPJACK, 1 );
            _CritDeleteItem( cr, PID_ALGAE, 1 );
            _CritAddItem( cr, PID_BURGER, 1 );
            cr.Say( SAY_NETMSG, "Вам удалось приготовить сытный бургер из мяса геккона, лепешки и водорослей." );
        }
       else if( _CritCountItem( cr, PID_GECKO_MEAT ) == 0 )
            cr.Say( SAY_NETMSG, "Как можно приготовить бургер из Геккона без мяса Геккона?" );
       else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
            cr.Say( SAY_NETMSG, "Бургер - это не только мясо, но и сочная булочка или хотя бы лепешка." );
      else if( _CritCountItem( cr, PID_ALGAE ) == 0 )
            cr.Say( SAY_NETMSG, "Соленые водоросли завершают этот кулинарный букет." );
    }
	if( answerI == 6 ) // Пицца
    {
        if( _CritCountItem( cr, PID_FLAPJACK  ) > 0 && _CritCountItem( cr, PID_MEAT ) > 0 && _CritCountItem( cr, PID_MUSH_LOW ) > 0)
        {
            _CritDeleteItem( cr, PID_FLAPJACK , 1 );
            _CritDeleteItem( cr, PID_MEAT, 1 );
            _CritDeleteItem( cr, PID_MUSH_LOW, 1 );
            _CritAddItem( cr, PID_PIZZA, 1 );
            cr.Say( SAY_NETMSG, "Вам удалось приготовить подобие пиццы, использовав лепешку, мясо и грибы." );
        }
       else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
            cr.Say( SAY_NETMSG, "Основой для пиццы служит кукурузная лепешка" );
       else if( _CritCountItem( cr, PID_MEAT ) == 0 )
            cr.Say( SAY_NETMSG, "Мелко нарежьте мясо и распределите равномерно по пицце." );
      else if( _CritCountItem( cr, PID_MUSH_LOW ) == 0 )
            cr.Say( SAY_NETMSG, "Без грибов пицца не может быть завершенной." );
    }
	if( answerI == 7 ) // Пирог с начинкой
    {
        if( _CritCountItem( cr, PID_FLAPJACK  ) > 0 && _CritCountItem( cr, PID_COOKED_FISH ) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0)
        {
            _CritDeleteItem( cr, PID_FLAPJACK , 1 );
            _CritDeleteItem( cr, PID_COOKED_FISH, 2 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 2 );
            _CritAddItem( cr, PID_PIROG , 1 );
            cr.Say( SAY_NETMSG, "Вы приготовили рыбный пирог из лепешки, двух порций рыбы и пары корней зандера." );
        }
       else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
            cr.Say( SAY_NETMSG, "Разрежьте лепешку с в верхней части и приготовьтесь творить" );
       else if( _CritCountItem( cr, PID_COOKED_FISH ) < 2 )
            cr.Say( SAY_NETMSG, "Мелко нарезанная проваренная рыба подойдет идеально." );
      else if( _CritCountItem( cr, PID_XANDER_ROOT ) < 2 )
            cr.Say( SAY_NETMSG, "Корень зандера служит прекрасной приправой к рыбе." );
    }
	if( answerI == 8 ) // Тако
    {
        if( _CritCountItem( cr, PID_RAT_MEAT  ) > 2 && _CritCountItem( cr, PID_FLAPJACK ) > 0 && _CritCountItem( cr, PID_BROC_FLOWER ) > 1)
        {
            _CritDeleteItem( cr, PID_RAT_MEAT , 3 );
            _CritDeleteItem( cr, PID_FLAPJACK, 1 );
            _CritDeleteItem( cr, PID_BROC_FLOWER, 2 );
            _CritAddItem( cr, PID_BURRITO, 1 );
            cr.Say( SAY_NETMSG, "Вам удалось приготовить тако, мелко нарезав три крысиные туши, заправив их в лепешку и приправив парой цветков брока." );
        }
       else if( _CritCountItem( cr, PID_RAT_MEAT  ) < 3 )
            cr.Say( SAY_NETMSG, "Было бы куда рациональнее использовать для фарша более мелкую добычу..." );
       else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
            cr.Say( SAY_NETMSG, "Фарш необходимо завернуть в свежую лепешку." );
      else if( _CritCountItem( cr, PID_BROC_FLOWER ) < 2 )
            cr.Say( SAY_NETMSG, "Измельченные цветы Брока отбивают аромат крысятины." );
    }
}
