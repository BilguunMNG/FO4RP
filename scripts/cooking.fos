#ifndef COOKING
#define COOKING

#include "_utils.fos"
#include "cooking_h.fos"
#include "_ltp.fos"
#include "gathering_h.fos"
#include "firestarter_h.fos"
#include "critter_skills_h.fos"

// bool ltp_cooking_inited=false;
// void ltp_cooking_init()
// {
//     LTPREG( LTP_COOKING, process_cooking )

//     ltp_cooking_inited=true;
// }

// void start_cooking( Critter& cr, bool standing )
// {
//     if( !ltp_cooking_inited )
// 	{
//         ltp_cooking_inited();
// 	}

// 	uint hit_pause = ACTION_PAUSE_BASE - ( cr.Stat[ST_AGILITY] * ACTION_PAUSE_BONUS_RATE );
//   	cr.ParamBase[ ST_LTP_SEQUENCE_WAIT ] = CLAMP( hit_pause, ACTION_PAUSE_MIN, ACTION_PAUSE_MAX );
//   	cr.ParamBase[ ST_LTP_SEQUENCE ] = CalcSequence( cr, null );

// 	if(!standing)
// 	{
// 		cr.SetAnims( COND_LIFE, 0, ANIM2_CROUCH );
// 	}
// 	else
// 	{
// 		cr.SetAnims( COND_LIFE, 0, ANIM2_LEANING1 );
// 	}
	
// 	cr.SayMsg( SAY_EMOTE_ON_HEAD, TEXTMSG_TEXT, "" );
	
// 	StartProcess( cr, LTP_COOKING, 0, 0, 0, cr.ParamBase[ ST_LTP_SEQUENCE_WAIT ] );
// }

// uint process_cooking( Critter@ cr, int& param0, int& param1, int& param2 )
// {
//     LTPROCESSD( LTP_COOKING )
	
//     param0++;
    
//     if( param0 > cr.Param[ ST_LTP_SEQUENCE ] )
//     {
//       cr.SayMsg( SAY_EMOTE, TEXTMSG_TEXT, STR_EMOTE_FINISH_REPAINT );
//       //Result( cr );
//       cr.SetAnims( COND_LIFE, 0, ANIM2_IDLE );
//       return 0;
//     }
    
//     uint[] values = { cr.Id };
//     //CreateTimeEvent( AFTER( REAL_MS( 700 ) ), "e_RepaiSound", values, true);
//     CreateTimeEvent( AFTER( REAL_MS( 1000 ) ), "gathering@e_TiredenessTimeout", values, true);

//     return cr.ParamBase[ ST_LTP_SEQUENCE_WAIT ];
// }

void AskCooking( Critter& cr, Item& fire, bool standing )
{
    Map@ map = cr.GetMap();
    if( !valid( map ) )
	{
        return;
    }

    iMenuHandler@ handler = CookingMenuMain( map, fire );
    iDialogBox@ menu = OpenMenu( cr, "", handler );
}

class CookingMenuMain: CenteredMenuHandler
{
    uint map_id;
	uint level;
	uint fire_id;
	
    CookingMenuMain( Map& map, Item& fire )
	{
        map_id = map.Id;
		level = 0;
		fire_id = fire.Id;
	}

	bool MenuUpdate( Critter& cr, iDialogBox& menu )
	{
        Map@ map = GetMap( map_id );
		Item@ fire = GetItem( fire_id );
		if( menu.ButtonMsg( STR_FURNITURE_MENU_CRAFT ) )
		{
			GetCraftToken( cr, fire );
			return false;
		}
		
		if( menu.ButtonMsg( STR_FIRE_MENU_COOK ) )
		{
			CookingMenu@ menu_cooking = CookingMenu( map );
			menu_cooking.level = level + 1;
			return menu.OpenChild( "Level " + menu_cooking.level, menu_cooking );
		}
		
		if( menu.ButtonMsg( STR_FIRE_MENU_FRY ) )
		{
			FastFrying( cr );	
			return true;
		}
		
		return true;
	}
	
	int getDescriptionFile()
    {
    	return TEXTMSG_TEXT;
    }

	int getDescriptionLine()
	{
		return STR_GM_MENU_MAIN;
	}

    string@ Description( Critter& cr )
	{
		return null;
    }	
}


bool GetCraftToken( Critter& cr, Item& fire )
{
	cr.SayMsg( SAY_EMOTE, TEXTMSG_TEXT, STR_EMOTE_WARM_HANDS );
	SayLog( cr, crInfo( cr ) + " used fire token." );
	
	Map@ map = cr.GetMap();
	if( !valid( map ) )
	{
		return false;
	}
	
	Item@ Workplace;
	@Workplace = map.GetItem( cr.HexX, cr.HexY, PID_GRAPPLE_HOOK );
	
	if( !valid( Workplace ) )
	{
		@Workplace = cr.GetMap().AddItem( cr.HexX, cr.HexY, PID_GRAPPLE_HOOK, 1 );
	}
	
	if( !valid( Workplace ) )
	{
		return false;
	}
	
	Workplace.SetScript( "item@_WorkplaceInit" );
	
	if( cr.CountItem( PID_FIREPLACE_TOKEN ) == 0 )
	{
		cr.AddItem( PID_FIREPLACE_TOKEN, 1 );
	}
	cr.RunClientScript( "client_screen_fixboy@ShowScreen", 0, 0, 0, null, null );
	return true;
}

bool FastFrying(Critter& cr)
{
    Item@ item = _CritGetItemHand(cr);
    if (!valid(item))
    {
        cr.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, STR_HOLD_MEAT);
        return true;
    }

    for (uint i = 0, len = fryDataProtoIds.length(); i < len; i++)
    {
        if (item.GetProtoId() == fryDataProtoIds[i][0])
        {
			//start_cooking();
			/*Item@ crafted = cr.AddItem(fryDataProtoIds[i][1], fryDataProtoIds[i][2]);
			if( valid(crafted))
			{
				SayLog(cr, crInfo(cr) + " fries "  + ".");            
				cr.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, STR_FRY_SUCCESS, "$name" + STR_INSERT_ITEM_LINE(item.GetProtoId() * 100));
				if (Random(1, 100) <= fryCookingSkillChanceUp)
				{
					raiseSkill(cr, SK_COOKING);
				}
				_SubItem(item, 1);
				return true;
			}*/
        }
    }

    cr.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, STR_WRONG_ITEM_TO_FRY);
    return true;
}

bool BurnMeal(int skill, int value)
{
	int delta = skill - value;
	if( delta < 50 )
	{
		if( Random( 1,50 ) > delta)
		{
			return true;
		}
	}

	return false;
}

void StartCookingMenu( Critter& cr )
{
    Map@ map = cr.GetMap();
    if( !valid(map) )
	{
        return;
    }

    iMenuHandler@ handler = CookingMenu( map );
    iDialogBox@ menu = OpenMenu( cr, "Cooking Book", handler );
}

class CookingMenu: CenteredMenuHandler
{
    uint map_id;
	uint level;
	bool isFailed = false;
	int skill;
	
	
    CookingMenu( Map& map )
	{
        map_id = map.Id;
		level = 1;
		skill = 0;
	}

    bool MenuUpdate( Critter& cr, iDialogBox& menu )
	{
        Map@ map = GetMap( map_id );
		skill = cr.Skill[ SK_COOKING ];
		if( menu.ButtonMsg( STR_POTATO_FRIES ) && skill > 59 )
		{
			if( cr.CountItem( PID_POTATO ) > 0 && cr.CountItem( PID_PLANT_OIL ) > 0 && cr.CountItem( PID_BOWL ) > 0 )
			{
				cr.DeleteItem( PID_POTATO, 1 );
				cr.DeleteItem( PID_PLANT_OIL, 1 );
				cr.AddItem( PID_PHIAL, 1 );
				
				isFailed = BurnMeal( skill, 59 );

				if( isFailed )
				{
					cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_FAIL );
				
				}
				else
				{
					cr.DeleteItem( PID_BOWL, 1 );
					
					cr.AddItem( PID_POTATO_FRIES, 1 );
					cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_SUCCESS );
					
					int skillNum = SK_COOKING;
					raiseSkill( cr, skillNum );
				}
			}
			else 
			{
				if( cr.CountItem( PID_POTATO ) == 0 )
				{
					cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_INGRIDIENT_1 );
				}
				else if( cr.CountItem( PID_PLANT_OIL ) == 0 )
				{
					cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_INGRIDIENT_2 );
				}
				else if( cr.CountItem( PID_BOWL ) == 0 )
				{
					cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_INGRIDIENT_3 );
				}
			}
				
			return true;
		}
		
		return true;
	}
	
	int getDescriptionFile()
    {
    	return TEXTMSG_TEXT;
    }

	int getDescriptionLine()
	{
		return STR_GM_MENU_MAIN;
	}

    string@ Description( Critter& cr )
	{
		return null;
    }	
}

/*
bool CookingMenuOld( Critter& cr )
{
	uint16 count = 0;
	if( cr.Skill[ SK_COOKING ] < 100 ) 
	{
		cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_NO_RECIPES );
	}
	
	int skill = ( cr.Skill[ SK_COOKING ] - 90 ) / 18;
	int skill_max = foodNames.length();
	skill = CLAMP( skill, 0, skill_max );
	for( int i = 0; i < skill; i++ )
	{
		count++;
	}

	cr.ShowScreen( SCREEN_DIALOGBOX, count, "answer_PATTERN" );
	cr.SayMsg( SAY_DIALOGBOX_TEXT, TEXTMSG_TEXT, STR_SELECT_RECIPE );
	
	for( uint8 i = 0; i < count; i++ )
	{
		cr.SayMsg( SAY_DIALOGBOX_BUTTON( i ), TEXTMSG_TEXT, foodNames[ i ] );
	}
	return true;
}

void answer_PATTERN( Critter& cr, uint answerI, string& answerS )
{
	SayLog( cr, crInfo( cr ) + " is preparing a meal." );
	
	bool isFailed = false;
	if( Random( 0, 100 ) + cr.Skill[ SK_COOKING ] < int( 120 + answerI * 10 ) )
	{
		isFailed = true;
	}

	if( answerI == RECIPE_POTATO_FRIES )
	{
        if( _CritCountItem( cr, PID_POTATO ) > 0 && _CritCountItem( cr, PID_PLANT_OIL ) > 0 && _CritCountItem( cr, PID_BOWL ) > 0 )
		{
			_CritDeleteItem( cr, PID_POTATO, 1 );
			_CritDeleteItem( cr, PID_PLANT_OIL, 1 );
			_CritDeleteItem( cr, PID_BOWL, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_POTATO_FRIES, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_POTATO ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_PLANT_OIL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_BOWL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_FRIES_INGRIDIENT_3 );
		}
    }

	if( answerI == RECIPE_POTATO_PANCAKES )
	{
        if( _CritCountItem( cr, PID_POTATO ) > 1 && _CritCountItem( cr, PID_CORN_FLOUR ) > 0 && _CritCountItem( cr, PID_PLANT_OIL ) > 0 && _CritCountItem( cr, PID_BOWL ) > 0 )
		{
			_CritDeleteItem( cr, PID_POTATO, 2 );
			_CritDeleteItem( cr, PID_CORN_FLOUR, 1);
			_CritDeleteItem( cr, PID_PLANT_OIL, 1 );
			_CritDeleteItem( cr, PID_BOWL, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_PANCAKES_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_POTATO_PANCAKES, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_PANCAKES_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_POTATO ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_PANCAKES_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_CORN_FLOUR ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_PANCAKES_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_PLANT_OIL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_PANCAKES_INGRIDIENT_3 );
		}
		else if( _CritCountItem( cr, PID_BOWL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_PANCAKES_INGRIDIENT_4 );
		}
    }

	if( answerI == RECIPE_POTATO_CHIPS )
	{
        if( _CritCountItem( cr, PID_POTATO ) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 && _CritCountItem( cr, PID_PLANT_OIL ) > 0 && _CritCountItem( cr, PID_BOWL ) > 0 )
		{
			_CritDeleteItem( cr, PID_POTATO, 1 );
			_CritDeleteItem( cr, PID_XANDER_ROOT, 1);
			_CritDeleteItem( cr, PID_PLANT_OIL, 1 );
			_CritDeleteItem( cr, PID_BOWL, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_CHIPS_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_POTATO_CHIPS, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_CHIPS_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_POTATO ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_CHIPS_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_CHIPS_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_PLANT_OIL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_CHIPS_INGRIDIENT_3 );
		}
		else if( _CritCountItem( cr, PID_BOWL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_CHIPS_INGRIDIENT_4 );
		}
    }

	if( answerI == RECIPE_POTATO_MASHED_CUTLET )
	{
		if( _CritCountItem( cr, PID_POTATO ) > 1 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 && _CritCountItem( cr, PID_PLANT_OIL ) > 0 && _CritCountItem( cr, PID_BOWL ) > 0 && (_CritCountItem( cr, PID_MEAT) > 1 || _CritCountItem( cr, PID_GECKO_MEAT) > 1))
		{
			_CritDeleteItem( cr, PID_POTATO, 2 );
			_CritDeleteItem( cr, PID_XANDER_ROOT, 1);
			_CritDeleteItem( cr, PID_PLANT_OIL, 1 );

			if (_CritCountItem( cr, PID_MEAT) > 1) 
			{
				_CritDeleteItem( cr, PID_MEAT, 2 );
			} 
			else 
			{
				_CritDeleteItem( cr, PID_GECKO_MEAT, 2 );
			}

			_CritDeleteItem( cr, PID_BOWL, 1 );

			if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_MASHED_CUTLET_FAIL );
			}
			else
			{   
				_CritAddItem( cr, PID_POTATO_MASHED_CUTLET, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_MASHED_CUTLET_SUCCESS );

				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
		}
		else if( _CritCountItem( cr, PID_POTATO ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_MASHED_CUTLET_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_MASHED_CUTLET_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_PLANT_OIL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_MASHED_CUTLET_INGRIDIENT_3 );
		}
		else if( _CritCountItem( cr, PID_MEAT ) < 2 && _CritCountItem( cr, PID_GECKO_MEAT ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_MASHED_CUTLET_INGRIDIENT_4 );
		}
		else if( _CritCountItem( cr, PID_BOWL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_POTATO_MASHED_CUTLET_INGRIDIENT_5 );
		}
	}

	if( answerI == RECIPE_PANCAKES )
	{
        if( _CritCountItem( cr, PID_SUGAR ) > 0 && _CritCountItem( cr, PID_MUTATED_FRUIT ) > 1 && _CritCountItem( cr, PID_PLANT_OIL ) > 0 && _CritCountItem( cr, PID_BOWL ) > 0 && _CritCountItem( cr, PID_CORN_FLOUR ) > 1 && _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) > 0 )
		{
			_CritDeleteItem( cr, PID_SUGAR, 1 );
			_CritDeleteItem( cr, PID_MUTATED_FRUIT, 2);
			_CritDeleteItem( cr, PID_PLANT_OIL, 1 );
			_CritDeleteItem( cr, PID_BOWL, 1 );
			_CritDeleteItem( cr, PID_CORN_FLOUR, 2 );
			_CritDeleteItem( cr, PID_GLASS_BOTTLE_FULL, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PANCAKES_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_PANCAKES, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PANCAKES_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_SUGAR ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PANCAKES_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_MUTATED_FRUIT ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PANCAKES_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_PLANT_OIL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PANCAKES_INGRIDIENT_3 );
		}
		else if( _CritCountItem( cr, PID_BOWL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PANCAKES_INGRIDIENT_4 );
		}
		else if( _CritCountItem( cr, PID_CORN_FLOUR ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PANCAKES_INGRIDIENT_5 );
		}
		else if( _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PANCAKES_INGRIDIENT_6 );
		}
    }

    if( answerI == RECIPE_MAGGOT_SOUP )
	{
        if( _CritCountItem( cr, PID_MAGGOT ) >= 3 && _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) > 0 )
		{
			_CritDeleteItem( cr, PID_MAGGOT, 3 );
            _CritDeleteItem( cr, PID_GLASS_BOTTLE_FULL, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_MAGGOT_SOUP_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_MAGGOT_SOUP, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_MAGGOT_SOUP_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_MAGGOT ) < 4 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_MAGGOT_SOUP_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_MAGGOT_SOUP_INGRIDIENT_2 );
		}
    }

    if( answerI == RECIPE_RAT_STEW )
	{
        if( _CritCountItem( cr, PID_RAT_MEAT ) > 0 && _CritCountItem( cr, PID_PEYOTE ) > 0 && _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) > 0 )
		{
			_CritDeleteItem( cr, PID_RAT_MEAT, 1 );
			_CritDeleteItem( cr, PID_PEYOTE, 1 );
            _CritDeleteItem( cr, PID_GLASS_BOTTLE_FULL, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_RAT_STEW, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_RAT_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_PEYOTE ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_INGRIDIENT_3 );
		}
    }

    if( answerI == RECIPE_SALAD )
	{
        if( _CritCountItem( cr, PID_ALGAE ) > 1 && _CritCountItem( cr, PID_MUTATED_FRUIT ) > 0 )
		{
			_CritDeleteItem( cr, PID_MUTATED_FRUIT, 1 );
            _CritDeleteItem( cr, PID_ALGAE, 2 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SALAD_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_SALAD, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SALAD_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_ALGAE ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SALAD_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_MUTATED_FRUIT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SALAD_INGRIDIENT_2 );
		}
    }

	if( answerI == RECIPE_SOUP )
    {
        if( _CritCountItem( cr, PID_CABBAGE ) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 && _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) > 0 )
        {
            _CritDeleteItem( cr, PID_CABBAGE, 1 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
			_CritDeleteItem( cr, PID_GLASS_BOTTLE_FULL, 1);
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_HERBAL_SOUP, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_CABBAGE ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_INGRIDIENT_3 );
		}
    }

    if( answerI == RECIPE_KEBAB )
    {
        if( _CritCountItem( cr, PID_MEAT ) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 )
        {
            _CritDeleteItem( cr, PID_MEAT, 1 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_KEBAB_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_MEAT_ON_A_STICK, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_KEBAB_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
        else if( _CritCountItem( cr, PID_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_KEBAB_INGRIDIENT_1 );
		}
        else if(_CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_KEBAB_INGRIDIENT_2 );
		} 
    }

    if( answerI == RECIPE_TORTILLA )
    {
        if( _CritCountItem( cr, PID_CORN_FLOUR) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 )
        {
            _CritDeleteItem( cr, PID_CORN_FLOUR, 1 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TORTILLA_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_FLAPJACK, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TORTILLA_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_CORN_FLOUR ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TORTILLA_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TORTILLA_INGRIDIENT_2 );
		}
    }

    if( answerI == RECIPE_PRETZEL )
	{
        if( _CritCountItem( cr, PID_CORN_FLOUR ) > 0 && _CritCountItem( cr, PID_FERMENT ) > 0 && _CritCountItem( cr, PID_SUGAR ) > 0 )
		{
			_CritDeleteItem( cr, PID_CORN_FLOUR, 1 );
			_CritDeleteItem( cr, PID_FERMENT, 1 );
            _CritDeleteItem( cr, PID_SUGAR, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_PRETZEL, 3 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_CORN_FLOUR ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_FERMENT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_SUGAR ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_INGRIDIENT_3 );
		}
    }


    if( answerI == RECIPE_STOMACH )
    {
        if( _CritCountItem( cr, PID_MEAT ) > 0 && _CritCountItem( cr, PID_MOLERAT_STOMATCH ) > 0 && _CritCountItem( cr, PID_BROC_FLOWER ) > 1 )
        {
            _CritDeleteItem( cr, PID_BROC_FLOWER, 2 );
            _CritDeleteItem( cr, PID_MEAT, 1 );
            _CritDeleteItem( cr, PID_MOLERAT_STOMATCH, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_COOKED_MOLERAT_STOMATCH, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_MOLERAT_STOMATCH ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_INGRIDIENT_1 );
		}
            
		else if( _CritCountItem( cr, PID_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_BROC_FLOWER ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_INGRIDIENT_3 );
		}
	}

    if( answerI == RECIPE_STEW )
    {
        if( _CritCountItem( cr, PID_MEAT ) > 1 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 && _CritCountItem( cr, PID_BROC_FLOWER ) > 0)
        {
            _CritDeleteItem( cr, PID_MEAT, 2 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
            _CritDeleteItem( cr, PID_BROC_FLOWER, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_RAGOUT, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_MEAT ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_BROC_FLOWER ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_INGRIDIENT_3 );
		}
    }

    if( answerI == RECIPE_BURGER )
    {
        if( _CritCountItem( cr, PID_GECKO_MEAT  ) > 0 && _CritCountItem( cr, PID_FLAPJACK ) > 0 && _CritCountItem( cr, PID_CABBAGE ) > 0)
        {
            _CritDeleteItem( cr, PID_GECKO_MEAT, 1 );
            _CritDeleteItem( cr, PID_FLAPJACK, 1 );
            _CritDeleteItem( cr, PID_CABBAGE, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_BURGER, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );				
			}
        }
		else if( _CritCountItem( cr, PID_GECKO_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_CABBAGE) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_INGRIDIENT_3 );
		}
    }

	if( answerI == RECIPE_PIZZA )
    {
        if( _CritCountItem( cr, PID_FLAPJACK  ) > 0 && _CritCountItem( cr, PID_MEAT ) > 0 && _CritCountItem( cr, PID_BLACK_MUSHROOMS ) > 0)
        {
            _CritDeleteItem( cr, PID_FLAPJACK , 1 );
            _CritDeleteItem( cr, PID_MEAT, 1 );
            _CritDeleteItem( cr, PID_BLACK_MUSHROOMS, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_PIZZA, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_BLACK_MUSHROOMS ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_INGRIDIENT_3 );
		}
    }

	if( answerI == RECIPE_FISH_PIE )
    {
        if( _CritCountItem( cr, PID_FLAPJACK  ) > 0 && _CritCountItem( cr, PID_COOKED_FISH ) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0)
        {
            _CritDeleteItem( cr, PID_FLAPJACK , 1 );
            _CritDeleteItem( cr, PID_COOKED_FISH, 2 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 2 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_PIROG , 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_COOKED_FISH ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_INGRIDIENT_3 );
		}

    }
	if( answerI == RECIPE_TACO )
    {
        if( _CritCountItem( cr, PID_RAT_MEAT  ) > 2 && _CritCountItem( cr, PID_FLAPJACK ) > 0 && _CritCountItem( cr, PID_BROC_FLOWER ) > 1)
        {
            _CritDeleteItem( cr, PID_RAT_MEAT , 3 );
            _CritDeleteItem( cr, PID_FLAPJACK, 1 );
            _CritDeleteItem( cr, PID_BROC_FLOWER, 2 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_BURRITO, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_RAT_MEAT  ) < 3 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_BROC_FLOWER ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_INGRIDIENT_3 );
		}
    }
}*/

#endif // COOKING