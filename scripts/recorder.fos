#ifndef RECORDER
#define RECORDER

#include "_utils.fos"
#include "recorder_h.fos"

class MenuRecorder: CenteredMenuHandler 
{
    uint recorder_id;
    uint map_id;
	
    MenuRecorder( Item& recorder, Map& map )
	{
        recorder_id = recorder.Id;
        map_id = map.Id;
    }

    bool MenuUpdate( Critter& cr, iDialogBox& menu )
	{
		Item@ recorder = GetItem( recorder_id );
		Map@ map = GetMap( map_id );
		
		if( !valid( map ) )
		{
			return false;
		}
		
		if( !valid( recorder ) )
		{
			return false;
		}
		
		if( menu.ButtonMsg( STR_RECORDER_MENU_INSERT_BATTERY ) )
		{
			if( hasItems( cr, Batteries ) )
			{
				Item@ battery = null;
				int charge = 0;
				if( hasItem( cr, Batteries[0], -1 ) )
				{
					charge = 60;
					@ battery = getItem( cr, PID_CUENCELL_LOW, -1 );
				}
				else
				{
					@ battery = getItem( cr, PID_SMALL_ENERGY_CELL, -1 );
					charge = 180;
				}
				
				if( valid( battery ) )
				{
					cr.Say( SAY_NETMSG, "Вы потратили: " + "|0xFFFF00 " + itemName( battery ) );
					cr.Say( SAY_EMOTE_ON_HEAD, "заряжает приемник" );
					_SubItem( battery, 1 );
					recorder.RECORDER_CHARGE += charge;
					if( recorder.RECORDER_CHARGE > 240 )
					{
						recorder.RECORDER_CHARGE = 240;
					}
				}
			}
			else
			{
				cr.Say( SAY_NETMSG, "|0xFFFF00 У Вас нет подходящих батарей." );
			}
			return true;
		}
		
		if( recorder.RECORDER_STATUS == 0 )
		{
			if( menu.ButtonMsg( STR_RECORDER_MENU_OPEN_COVER ) ) 
			{
				ShowContainer( cr, recorder, TRANSFER_SELF_CONT );
				return false;
			}
		}
		
		if( recorder.RECORDER_VOLUME < 50 && menu.ButtonMsg( STR_DEVICE_RADIUS_INCREASE ) )
		{
			recorder.RECORDER_VOLUME ++;
			if( recorder.RECORDER_VOLUME > 50 )
			{
				recorder.RECORDER_VOLUME = 50;
			}
		}
		if( recorder.RECORDER_VOLUME != 0 && menu.ButtonMsg( STR_DEVICE_RADIUS_DECREASE ) ) 
		{
			recorder.RECORDER_VOLUME --;
			if( recorder.RECORDER_VOLUME < 0 )
			{
				recorder.RECORDER_VOLUME = 0;
			}
		}
		
		return true;
    }
	
	int getDescriptionFile()
    {
    	return TEXTMSG_TEXT;
    }

	int getDescriptionLine()
	{
		return STR_RECORDER_MENU_MAIN;
	}
	
    string@ Description( Critter& cr )
	{
	
		Item@ recorder = GetItem( recorder_id );
		string volume = recorder.RECORDER_VOLUME;
		
		string chargeBattery = "";
		if( recorder.RECORDER_CHARGE > 0 ) 
		{
			chargeBattery += STR_INSERT_TEXT_LINE( STR_RECORDER_MENU_PROCESS_CHARGED ) 
				 + "$charge" + recorder.RECORDER_CHARGE;	
		}
		else if( recorder.RECORDER_CHARGE >= 240 )
		{
			chargeBattery += STR_INSERT_TEXT_LINE( STR_RECORDER_MENU_BATTERY_CHARGED );
		}

		return  "$batteryCharge" + chargeBattery + "$volume" + volume;
    }

}

bool TransferToRecorder( Critter& cr, Item& targetItem, Item& cont )
{
	if( !valid( cont ) )
	{
		return false; 
	}
	
	Map@ map = cr.GetMap();
	uint transferAmount = cr.ItemTransferCount();
	uint16 targetItemPid = targetItem.GetProtoId();
	
	if( targetItemPid == PID_TAPE )
	{
		MoveItem( targetItem, transferAmount, cont, 0 );
	}
	else
	{
		cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RECORDER_WRONG_ITEM ); 
	}
	
	ShowContainer( cr, cont, TRANSFER_SELF_CONT );
	return true;
}

bool TransferFromRecorder( Critter& cr, Item& targetItem, Item& cont )
{
	if( !valid( cont ) )
	{
		return false; 
	}
	
	uint transferAmount = cr.ItemTransferCount();
	MoveItem( targetItem, transferAmount, cr );
	return true;
}

void StartMenuRecorder( Critter& cr, Item& recorder )
{
    Map@ map = cr.GetMap();
    if( !valid( map ) )
	{
        return;
    }
	
    iMenuHandler@ handler = MenuRecorder( recorder, map );
    iDialogBox@ menu = OpenMenu( cr, "", handler );
}

#endif // RECORDER