// Passive action points regeneration module
// by Vice Dice, 2019.

// Installation, version 1:

// Add the line below inside "macros.fos":
// #define _GetApRegen                   			# (cr)            ( (cr.Stat[ST_AGILITY] * 70)) //test

// Add the line below inside "defines.fos":
// #define CTE_AP_REGEN							 	( 154 )

// Add the line below inside "client_defines.fos":
// #define AP_REGEN_TIME							( 1000 )

// Add the line somewhere on server's section of "scripts.cfg"
// @ server module apregen					# Action Points passive regeneration module

#define APREGEN_MODULE
#include "apregen_h.fos"

bool SetCritterApRegen(Critter& cr)
{
	cr.EraseTimeEvents(CTE_AP_REGEN);
	return cr.AddTimeEvent( "cte_RegenAp", REAL_MS(1000), CTE_AP_REGEN );
}

uint cte_RegenAp(Critter& cr, int identifier, uint& rate)
{
	if( !cr.IsPlayer() ) return 0;
	
	if(cr.Stat[ST_CURRENT_AP] < cr.Stat[ST_ACTION_POINTS])
	{
		// cr.StatBase[ST_CURRENT_AP] += _GetApRegen(cr);  // previous version of apregen featuring macros
		cr.StatBase[ST_CURRENT_AP] += cr.Stat[ST_APREGEN]; // now - with new stat from "parameters.fos"
		
		if( cr.GetAccess() == ACCESS_TESTER )
			cr.Say( SAY_NETMSG, "Восстановлено " + cr.Stat[ST_APREGEN] + " ОД за " + AP_REGEN_TIME + " мс:\n" + cr.StatBase[ST_APREGEN] + " base" );
		
		return (REAL_MS(AP_REGEN_TIME));
	}

	return (REAL_MS(AP_REGEN_TIME));
}