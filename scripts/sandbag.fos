#ifndef SANDBAG
#define SANDBAG

#include "_utils.fos"
#include "sandbag_h.fos"
#include "speed_h.fos"

bool SandbagCheck( Critter& cr, Item@ sandbag, Item@ target )
{
    Map@ map = cr.GetMap();
    if( !valid( map ) )
	{
		return false;
	}

	if( !valid( sandbag ) && !valid( target ) )
	{
		return false;
	}
	
	if( sandbag.GetProtoId() != PID_SINGLE_SANDBAG )
	{
		return false;
	}
	
    uint16 targetPid = target.GetProtoId();
	int index = Sandbags.find( targetPid );
	if(	index == -1 )
	{
		return false;
	}
	
	Critter@[] critters; 
	map.GetCrittersHex( target.HexX, target.HexY, 0, FIND_LIFE_AND_KO, critters );
	if( critters.length() > 0 )
	{
		cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SANDBAGS_OBSTACLE_CRITTER );
		return false;
	}
	
	if( index == int( Sandbags.length() -1 ) )
	{
		cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SANDBAGS_STACK_TOO_HIGH );
		return false;
	}
	
	AddSandbag( cr, sandbag, target );
	return true;
}

bool AddSandbag( Critter& cr, Item& sandbag, Item& target )
{
	if( valid( sandbag ) && valid( target ) )
	{	
		uint16 targetPid = target.GetProtoId();
		uint16 index = Sandbags.find( targetPid );
		if( index < Sandbags.length() -1 )
		{
			_SubItem( sandbag, 1 );
			target.ChangeProto( Sandbags[index + 1] );
			if( target.GetProtoId() == PID_QUINTO_SANDBAG )
			{
				UNSETFLAG( target.Flags, ITEM_SHOOT_THRU );
				UNSETFLAG( target.Flags, ITEM_LIGHT_THRU );
			}
			target.Update();
		}
		return true;
	}
	return false;
}

bool TakeSandbag( Critter& cr, Item& item )
{
	uint16 sandbagPid = item.GetProtoId();
	int index = Sandbags.find( sandbagPid );
	if(	index == -1 )
	{
		return false;
	}
	else if( index <= int( Sandbags.length() ) && index != 0 )
	{
		if( !PassableHex( cr ) )
		{
			return false;
		}		
		
		if( item.GetProtoId() == PID_QUINTO_SANDBAG )
		{
			SETFLAG( item.Flags, ITEM_SHOOT_THRU );
			SETFLAG( item.Flags, ITEM_LIGHT_THRU );
		}
		
		item.ChangeProto( Sandbags[index - 1] );
		item.Update();

		Item@ sandbag = cr.GetMap().AddItem( cr.HexX, cr.HexY, PID_SINGLE_SANDBAG, 1 );	
		return PickItem( cr, sandbag );
	}
	else
	{
		PickItem( cr, item );
	}
	return true;
}

#endif //SANDBAG