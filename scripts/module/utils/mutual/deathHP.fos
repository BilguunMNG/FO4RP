#ifndef DEATH_HP_MODULE
#define DEATH_HP_MODULE

class DeathBehaviour
{
	CritterMutual@ cr;
	DeathBehaviour( CritterMutual& cr )
	{
		@this.cr = @cr;
	}
	
	int Archetype()
	{
		return 0;
	}
	
	int Bodytype()
	{
		switch( cr.Stat[ ST_BODY_TYPE ] )
		{
			case(BT_MEN ): 			return 50;
			case(BT_WOMEN ): 		return 50;
			case(BT_CHILDREN ): 	return 25;
			case(BT_SUPER_MUTANT ): return 50;
			case(BT_GHOUL ): 		return 50;
			case(BT_BRAHMIN ): 		return 50;
			case(BT_RADSCORPION ): 	return 15;
			case(BT_RAT ): 			return 10;
			case(BT_FLOATER ): 		return 50;
			case(BT_CENTAUR ): 		return 50;
			case(BT_ROBOT ): 		return 50;
			case(BT_DOG ): 			return 25;
			case(BT_MANTI ): 		return 10;
			case(BT_DEATHCLAW ): 	return 50;
			case(BT_PLANT ): 		return 10;
			case(BT_GECKO ): 		return 15;
			case(BT_ALIEN ): 		return 50;
			case(BT_GIANT_ANT ): 	return 10;
			case(BT_BIG_BAD_BOSS ): return 50;
			case(BT_GIANT_BEETLE ): return 50;
			case(BT_GIANT_WASP ): 	return 50;
			case(BT_YAO ): 			return 50;
		}
		return 0;
	}

	#define NEGATIVE_HP_PER_END ( 5 )
	#define NEGATIVE_HP_PER_CHA ( 10 )
	int StatInfluence()
	{
		return NEGATIVE_HP_PER_END * cr.Stat[ST_ENDURANCE] + NEGATIVE_HP_PER_CHA * cr.Stat[ST_CHARISMA];
	}
	
	int get() 
	{
		int result = Bodytype();
		
		
		if( cr.IsPlayer() )
		{
			result += StatInfluence();
		}
		else
		{

		}
		
		return  - result;
	}
}

int getDeathHitPoints( CritterMutual& cr )
{
	return DeathBehaviour(cr).get();
}

#endif // DEATH_HP_MODULE