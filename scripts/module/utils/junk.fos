#define d2	#(value)	two_digits(value)
string two_digits( uint16 value )
{
	return ( value > 9 ? ( "" + value ) : ( "0" + value ) );
}
#define D2	#(value, delimiter)	smart_two_digits(value, delimiter)
string smart_two_digits( uint16 value, string delimiter )
{
	return( value > 0 ? ( value > 9 ? ( "" + value ) : ( "0" + value ) ) + delimiter : "" );
}

string hl( int text )    { return "|0xF8F993 " + text + "|0x00FF00 "; }
string hl( string text ) { return "|0xF8F993 " + ( valid( text ) ? text : "" ) + "|0x00FF00 "; }

//Формат настраиваемый.
string enlist( uint[]@ list, string divider = ", ", string prefix = "", string postfix = "" )
{ 
	if( !valid( list ) ) return "[null]";

	uint len = list.length();
	if( len == 0 ) return "[empty]";
	
	string result = prefix + list[0];
	for( uint i = 1; i < len; i++ )
		result += divider + list[i];
	
	return result + postfix;
}

/*
int[] _list( int arg0 ) { int[] result = { arg0 }; 
	return result; }
int[] _list( int arg0, int arg1 ) { int[] result = { arg0, arg1 }; 
	return result; }
int[] _list( int arg0, int arg1, int arg2 ) { int[] result = { arg0, arg1, arg2 }; 
	return result; }
int[] _list( int arg0, int arg1, int arg2, int arg3 ){ int[] result = { arg0, arg1, arg2, arg3 }; 
	return result; }
int[] _list( int arg0, int arg1, int arg2, int arg3, int arg4 ){ int[] result = { arg0, arg1, arg2, arg3, arg4 }; 
	return result; }
int[] _list( int arg0, int arg1, int arg2, int arg3, int arg4, int arg5 ){ int[] result = { arg0, arg1, arg2, arg3, arg4, arg5 }; 
	return result; }
int[] _list( int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6 ){ int[] result = { arg0, arg1, arg2, arg3, arg4, arg5, arg6 }; 
	return result; }
int[] _list( int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7 ) { int[] result = { arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 }; 
	return result; }
*/