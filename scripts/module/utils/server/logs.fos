/*
#define ITEM_ACT_MOVED		(0)
#define ITEM_ACT_TOOK		(1)
#define ITEM_ACT_PUT		(2)
#define ITEM_ACT_PICKED		(3)
#define ITEM_ACT_DROPPED	(4)
#define ITEM_ACT_FOUND		(5)
*/
void CheckItemMovement( Critter& cr, Item& item, int skill ) 
{
	switch( skill )
	{
		case( SKILL_PICK_ON_GROUND ): 	
			//if( item.GetType() == ITEM_TYPE_DOOR || item.GetType() == ITEM_TYPE_CONTAINER )
				//LogItemMovement( cr, item, "трогает" );
			//else
			if( item.GetType() != ITEM_TYPE_DOOR && item.GetType() != ITEM_TYPE_CONTAINER )
				LogItemMovement( cr, item, "поднимает" ); 
			break;
		case( SKILL_PUT_CONT ):			LogItemMovement( cr, item, "кладёт" ); break;
		case( SKILL_TAKE_CONT ):		LogItemMovement( cr, item, "берёт" ); break;
	}
}

void LogItemMovement( Critter& cr, Item& item, string action ) 
{ //#id [name] action [name] xCount #id PID.
	string amount_info = "";
	
	if( action != "поднимает" && action != "кладёт на землю" )
	{
		uint amount = cr.ItemTransferCount();
		if( amount > 0 && item.GetCount() > 1 )
			amount_info = " " + ( item.GetCount() != amount ? "x" + amount : "все" );
	}

	string info = crInfo( cr ) + " " + action + amount_info + " " + itemDesc( item );
	
	if( ( action == "кладёт" || action == "берёт" ) )
	{
		if( cr.ParamBase[ ST_LAST_CONT_ID ] != 0 )
		{
			Item@ target = GetItem( cr.ParamBase[ ST_LAST_CONT_ID ] );
			if( valid( target ) )
			{
				if( action == "кладёт" )
					info += " в";

				if( action == "берёт" )
					info += " из";
				
				info += " " + itemDesc( target );
			}
		}
		
		if( cr.ParamBase[ ST_LAST_CRIT_ID ] != 0 )
		{
			Critter@ target = GetCritter( cr.ParamBase[ ST_LAST_CRIT_ID ] );
			if( valid( target ) )
			{
				if( action == "кладёт" )
					info += " к";

				if( action == "берёт" )
					info += " у";

				info += " " + crInfo( target, true );
			}
		}
	}

	if( isGM( cr ) )
		LogInfo( "logs\\containers.txt", info + "." ); 

	SayLog( cr, info );
}

void SayLog( Critter@ cr, string@ message )
{
	if( valid( cr ) )
		SayLog( cr.GetMap(), message, cr.HexX, cr.HexY );
}
void SayLog( Map@ map, string@ message, int x = 0, int y = 0 )
{
	if( !valid( message ) ) { Log( "!valid message" ); return; }

    file f;
    if( f.open( "logs\\saylog.txt", "a" ) >= 0 )
    {
		string@ map_name = !valid(map) ? "Глобал" : GetGmMsgStr( ( map.GetProtoId() + 1 ) * 10 + 8 );
		if( !valid( map_name ) )
			@map_name = "[ Карта #" + map.Id + " PID " + map.GetProtoId() + " ]";
		
		string cords = "";
		if( x != 0 && y != 0 )
			cords = " (" + x + ":" + y + ")";
        f.writeString( FixedSize( RealDay() + " " + RealTime() + " = " + MakeTime( __FullSecond ) + map_name + cords + ":", 60 ) + message + "\n" );
        f.close();
    }
}

void TrackItemState( Item& item )
{
	LogInfo( "logs\\containers.txt", "Найден " + itemDesc( item ) + ". " + ItemState( item ) ); 
}

void LogInfo( string filename, string text )
{
    file f;
    if( f.open( filename, "a" ) >= 0 )
    {
        f.writeString( timeInfo() + text + "\n" );
        f.close();
    }
}