/*
#define ITEM_ACT_MOVED		(0)
#define ITEM_ACT_TOOK		(1)
#define ITEM_ACT_PUT		(2)
#define ITEM_ACT_PICKED		(3)
#define ITEM_ACT_DROPPED	(4)
#define ITEM_ACT_FOUND		(5)
*/
void CheckItemMovement( Critter& cr, Item& item, int skill ) 
{
	switch( skill )
	{
		case( SKILL_PICK_ON_GROUND ): 	
			if( item.GetType() == ITEM_TYPE_DOOR || item.GetType() == ITEM_TYPE_CONTAINER )
				LogItemMovement( cr, item, "трогает" );
			else
				LogItemMovement( cr, item, "поднимает" ); 
			break;
		case( SKILL_PUT_CONT ):			LogItemMovement( cr, item, "кладёт" ); break;
		case( SKILL_TAKE_CONT ):		LogItemMovement( cr, item, "берёт" ); break;
	}
}

void LogItemMovement( Critter& cr, Item& item, string action, int detail = 0 ) 
{ //#id [name] action [name] xCount #id PID.
	if( isGM( cr ) )
	{
		if( ( detail != 0 && isDebugging(detail) ) )
			LogInfo( "logs\\containers.txt", crInfo( cr ) + " " + action + " " + itemDesc( item ) + "." ); 
	}
	else
		SayLog( cr, crInfo( cr, true ) + " " + action + " " + itemDesc( item ) + "." );
}

void SayLog( Critter@ cr, string@ message )
{
	if( valid( cr ) )
		SayLog( cr.GetMap(), message );
}
void SayLog( Map@ map, string@ message )
{
	if( !valid( message ) ) { Log( "!valid message" ); return; }

    file f;
    if( f.open( "logs\\saylog.txt", "a" ) >= 0 )
    {
		string@ map_name = !valid(map) ? "Глобал" : GetGmMsgStr( ( map.GetProtoId() + 1 ) * 10 + 8 );
		if( !valid( map_name ) )
			@map_name = "[ Карта #" + map.Id + " PID " + map.GetProtoId() + " ]";
	
        f.writeString( FixedSize( RealDay() + " " + RealTime() + " = " + MakeTime( __FullSecond ) + map_name + ":", 50 ) + message + "\n" );
        f.close();
    }
}

void TrackItemState( Item& item )
{
	LogInfo( "logs\\containers.txt", "Найден " + itemDesc( item ) + ". " + ItemState( item ) ); 
}

void LogInfo( string filename, string text )
{
    file f;
    if( f.open( filename, "a" ) >= 0 )
    {
        f.writeString( timeInfo() + text + "\n" );
        f.close();
    }
}