bool Warning( string@ text, bool result = false )
{
	if( valid( text ) )
		Log( text );
	
	return result;
}

bool action( Critter@ cr, string text, bool result = true ) { return SayReturn( cr, text, SAY_EMOTE_ON_HEAD, result ); }
bool SayReturn( Critter@ cr, string text, uint SAYTYPE, bool result = true )
{
	cr.Say( SAYTYPE, text );
	return result;
}

bool inform( Critter& cr, string@ text, bool result = true, bool TMI = true ) 
{
	if( !valid( text ) || !TMI ) 
		return result; 
	
	return testInfo( cr, text, SAY_NETMSG, result, true );
}

bool inform( Critter& cr, Critter@ target, string@ text, bool show = false )
{
	if( !isDebugging(1) ) return false;
	
	testInfo( cr, text );
	if( valid( target ) )
		testInfo( target, text );
	
	return true;
}

bool testInfo( string@ text, bool result = false )
{
	if( !valid( text ) ) return result;
	
	Log( text );
	
	return result;
}

//TODO: Переехать на _utils со всех _macros
// bool testInfo( Critter& cr, string text, uint8 saytype = 11 /*SAY_NETMSG*/, bool result = false, bool show = false )
// {
	// if( show || cr.Param[ QST_GAMEMODE ] == GAME_TEST )
		// cr.Say( saytype, text );
	
	// return result;
// }

string genderEnding( Critter& cr )
{
	switch( cr.Stat[ ST_GENDER ] )
	{
		case(0): return ""; //он
		case(1): return "а"; //онА
		case(2): return "о"; //онО
	}
	
	return "";
}