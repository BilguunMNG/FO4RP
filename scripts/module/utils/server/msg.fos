void DIALOG_MENU( Critter& cr, string[] data )
{
	if( !valid(data) || data.length() < 2 ) return;
	
	uint len = data.length() - 2;
	if( len > 20 ) { cr.Say( SAY_NETMSG, "Часть возможностей не влезла в список!" ); len = 20; }
	
	cr.ShowScreen( SCREEN_DIALOGBOX, len, data[0] );
	cr.Say( SAY_DIALOGBOX_TEXT, data[1] );
	for( uint i = 0; i < len; i++ )
		cr.Say( SAY_DIALOGBOX_BUTTON( i ), Centering( data[2 + i] ) );
		
	cr.Say( SAY_DIALOGBOX_BUTTON( len ), Centering( "Отмена" ) );
}

bool Warning( string@ text, bool result = false )
{
	if( valid( text ) )
		Log( text );
	
	return result;
}

bool action( Critter@ cr, string text, bool result = true ) { return SayReturn( cr, text, SAY_EMOTE_ON_HEAD, result ); }
bool SayReturn( Critter@ cr, string text, uint SAYTYPE, bool result = true )
{
	if( valid( cr ) )
		cr.Say( SAYTYPE, text );
	
	return result;
}

bool inform( Critter& cr, string@ text, bool result = true, bool TMI = true ) 
{
	if( !valid( text ) || !TMI ) 
		return result; 
	
	return testInfo( cr, text, SAY_NETMSG, result, true );
}

bool inform( Critter& cr, Critter@ target, string@ text, bool show = false )
{
	if( !isDebugging(1) ) return false;
	
	testInfo( cr, text );
	if( valid( target ) )
		testInfo( target, text );
	
	return true;
}

bool testInfo( string@ text, bool result = false )
{
	if( !valid( text ) ) return result;
	
	Log( text );
	
	return result;
}

bool testInfo( Critter@ cr, string@ text, uint8 saytype = 11 /*SAY_NETMSG*/, bool result = false, bool show = false )
{
	if( !valid( text ) ) return result;
	
	if( show || ( valid( cr ) && cr.Param[ QST_GAMEMODE ] == GAME_TEST ) )
		cr.Say( saytype, text );
	
	return result;
}