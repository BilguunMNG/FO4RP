//Простенький прототип модуля, синхронизирующего dictionary с файлом-хранилищем.
#include "FileDictionary.fos"

//Ниже - образец примитивного кода для Кайнда. Таким макаром можно выводить и устанавливать любые лексемы по их имени.
//Напоминаю - лексемы хранятся в файле, и дублируются в dictionary (для ускорения обработки).

void s_text1( Critter& player, Critter@ npc, string@ lexems )
{
	if( !valid( lexems ) ) return;
	
	if( IS_DIALOG_SAY_MODE( lexems ) )
	{
		set( "data1", lexems );
	}
    else
	{
		lexems = get( "data1" );
		testInfo( player, lexems ); //Выводит информацию о лексемах персонажу в игровом режиме TESTER
	}		
}

void s_text2( Critter& player, Critter@ npc, string@ lexems )
{
	if( !valid( lexems ) ) return;

	if( IS_DIALOG_SAY_MODE( lexems ) )
	{
		if( lexems == " " )
		{
			set( "data1", "" );
			set( "data2", "" );
			return;
		}
		
		string data1 = get( "data1" );
		if( data1 == "$data1" || data1 == "$data1" + "???" )
			set( "data1", lexems );
		else
			set( "data2", lexems );
	}
    else
	{
		lexems = get( "data1" ) + get( "data2" );
		testInfo( player, lexems ); //Выводит информацию о лексемах персонажу в игровом режиме TESTER
	}		
}

void s_text3( Critter& player, Critter@ npc, string@ lexems )
{
	if( !valid( lexems ) ) return;

	string[] values = { "greka", "reka", "ruka", "rak" };
	
	if( IS_DIALOG_SAY_MODE( lexems ) )
	{
		if( lexems == " " )
		{
			for( uint i = 0, l = values.length(); i < l; i++ )
				set( values[i], "???" );
			
			return;
		}
		
		string[] correct = { "грека", "реку", "руку", "рак" };
		
		int index = correct.find( lexems );
		if( index != -1  )
			set( values[index], lexems );
			//set( values[index], correct[index] ); //Запись эквивалентна, т.к. lexems равно этому значению. Просто как пример.
	}
    else
	{
		string result = "";
		for( uint i = 0, l = values.length(); i < l; i++ )
			result += get( values[i] );
		
		lexems = result;
		testInfo( player, lexems ); //Выводит информацию о лексемах персонажу в игровом режиме TESTER
	}		
}
