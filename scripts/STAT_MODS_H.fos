// Author: Anuri

//Модификаторы от статов для ЛТП

#ifndef STAT_MODS_H
#define STAT_MODS_H

#include "mutual_h.fos"

//=========CHARACTER STAT MODIFIERS==========//
#define ACTION_PAUSE_MIN		 	( 800 )
#define ACTION_PAUSE_MAX		 	( 1700 )
#define ACTION_PAUSE_BASE		 	( 1800 )
#define ACTION_PAUSE_BONUS_RATE	 	( 100 )

#define ACTION_FATIGUE_MIN        	( 5 )
#define ACTION_FATIGUE_MAX       	( 14 )
#define ACTION_FATIGUE_BASE			( 15 )
#define ACTION_FATIGUE_RATE			( 1 )

#define OBJECT_DPA_MIN				( 70 ) // DPA = Damage Per Action
#define OBJECT_DPA_MAX				( 350 )
#define OBJECT_DPA_BASE				( 50 )
#define OBJECT_HP_BASE				( 1000 )

#define PHASE_TIMEOUT_MIN		 	( 45 )
#define PHASE_TIMEOUT_MAX		 	( 90 )
#define PHASE_TIMEOUT_BASE		 	( 40 )
#define PHASE_TIMEOUT_RATE 			( 5 )

uint e_TiredenessTimeout(uint[]@ values)
{
	Critter@cr = GetCritter( values[0] ); 
	if( cr.ParamBase[ CR_JETTED ] != 1 ) {
		uint fatigue_per_action = ACTION_FATIGUE_BASE - ( cr.Stat[ST_ENDURANCE] * ACTION_FATIGUE_RATE );
		uint fatigue = CLAMP( fatigue_per_action, ACTION_FATIGUE_MIN, ACTION_FATIGUE_MAX);
		cr.TimeoutBase[ TO_TIREDNESS ] = __FullSecond + cr.Timeout[ TO_TIREDNESS ] + REAL_SECOND( fatigue );
	}
	return 0;
}
	
#endif	