#ifndef TELEPORTS_MODULE
#define TELEPORTS_MODULE

#include "_utils.fos"
#include "teleports_h.fos"

import uint CountMapPlayers( Map@ map ) from "manager";

//~run teleports go 0 0 0
void go( Critter& cr, int p0, int p1, int p2 )
{
	ShowTeleports(cr);
}

void ShowTeleports( Critter& cr )
{
	InitTeleports();
	iMenuHandler@ handler = MenuTeleports( "", teleports, null );
	iDialogBox@ menu = OpenMenu( cr, "Select", handler );
}

class MenuTeleports: CenteredMenuHandler
{
	bool isRoot;
	bool redrawing;
	string fullName;
	Teleport@ teleport;
	MenuTeleports@ parent;
	
	MenuTeleports( string fullName, Teleport@ teleport, MenuTeleports@ parent ) 
	{
		this.redrawing = true;
		this.isRoot = !valid(parent);
		this.fullName = fullName;
		@this.teleport = @teleport;
		@this.parent = @parent;
	}

	bool MenuUpdate( Critter& cr, iDialogBox& menu )
	{
		if( !redrawing )
		{
			return false;
		}
		
		uint l = teleport.list();
		for( uint n = 0; n < l; n++ )
		{
			if( menu.ButtonMsg( STR_LEX_NAME , "$name" + teleport.online(n) + " " + teleport.name(n) ) )
			{ 
				Teleport@ target = teleport.get(n);
				if( target.list() == 0 )
				{
					target.warp( cr );
				}
				else
				{
					MenuTeleports@ new_menu = MenuTeleports( this.name(), target, this );
					new_menu.isRoot = false;
					return menu.OpenChild( this.name(), new_menu );
				}
			}
		}		
		
		if( !isRoot )
		{
			if( menu.ButtonMsg( STR_PREVIOUS ) )
			{
				return false;
			}
		}
		
		if( menu.ButtonMsg( STR_CLOSE_MENU_BUTTON ) )
		{
			redrawing = false;
			
			MenuTeleports@ loopback = @parent;
			while( valid( loopback ) )
			{
				loopback.redrawing = false;
				@loopback = @loopback.parent;
			}
			
			return false;
		}

		return true;
	}

	int getDescriptionFile()
	{
		return TEXTMSG_TEXT;
	}

	int getDescriptionLine()
	{
		return STR_TELEPORTS_MENU_MAIN;
	}
	
	string name() {
		return this.fullName + " " + this.teleport.name();
	}
	
	string@ Description( Critter& cr )
	{
		string info = "$name" + name();		
		
		return info;
	}
	
	bool ShouldRedraw( Critter& cr )
	{
		return true;
	}	
}

Teleport@ teleports;

void InitTeleports()
{
	if( valid( teleports ) )
	{
		return;
	}
	
	@teleports = 
		Teleport( "Teleports" )
		//English Segment Locations:
		.add( Teleport( "Current Session" )
			.add( Teleport( "Riverdale" )
				.add( "Riverdale",					103,		0, 474, 335 )
				.add( "Underground",				104,		1, 480, 370 )
				.add( "2nd floor",					105,		2, 185, 160 )
				.add( "3rd floor",					106,		3, 152, 150 )
				.add( "Mines",						115,		0, 170, 270 )
				.add( "Lead Mine",					123,		0, 170, 270 )
				)
			.add( Teleport( "Suburbs" )
				.add( "Road",						107,		0, 170, 270 )
				.add( "Shore",						109,		0, 170, 270 )
				.add( "Hell's Island",				136,		0, 170, 270 )
				.add( "Foothills",					126,		0, 170, 270 )
				.add( "Fisherman Retreat",			139,		0, 170, 270 )
				.add( "Bridge",						111,		0, 170, 270 )
				.add( "Cliff",						128,		0, 170, 270 )
				.add( "Hills",						126,		0, 170, 270 )
				.add( "Beach",						128,		0, 170, 270 )
				)
			.add( Teleport( "Canyon" )
				.add( "Canyon",						151,		0, 170, 270 )
				.add( "Outpost",					131,		0, 170, 270 )
				.add( "MT - West",					254,		0, 170, 270 )
				.add( "MT - East",					255,		0, 170, 270 )
				.add( "MT - Mine",					257,		1, 190, 210 )
				.add( "Uranium Mine",				258,		2, 165, 150 )
				.add( "Toxic Pit",					143,		0, 170, 270 )
				.add( "Canyon South",				252,		0, 170, 270 )
				.add( "Lair Of Death",				148,		0, 170, 270 )
				.add( "East Cliff",					134,		0, 170, 270 )
				.add( "Gorge",						146,		0, 170, 270 )
				.add( "West Cliff",					159,		0, 170, 270 )
				)
			.add( Teleport( "North Regions" )
				.add( "Swamp",						138,		0, 170, 270 )
				.add( "Old Church",					139,		0, 170, 270 )
				.add( "Forest Tribe",				130,		0, 170, 270 )
				.add( "Forest of Bones",			183,		0, 170, 270 )
				.add( "West Cliff",					159,		0, 170, 270 )
				.add( "Dogs Motel",					172,		0, 170, 270 )
				.add( "Abandoned Mine",				174,		0, 170, 270 )
				.add( "Tribal Burrial",				153,		0, 170, 270 )
				.add( "Crossroads",					155,		0, 170, 270 )
				.add( "Road to Shady",				157,		0, 170, 270 )
				)
			.add( Teleport( "Lone Pine" )
				.add( "Old Mine",					130,		0, 170, 270 )
				.add( "Ruins",						133,		0, 170, 270 )
				.add( "Cemetry",					135,		0, 170, 270 )
				.add( "Industrial",					176,		0, 170, 270 )
				.add( "Center",						178,		0, 170, 270 )
				.add( "Residential",				180,		0, 170, 270 )
				.add( "Blooming",					196,		0, 170, 270 )
				.add( "Blooming 2 floor",			197,		1, 205, 190 )
				)
			)
		.add( Teleport( "Past Sessions" )
			.add( Teleport( "Vaut 66" )
				.add( "Level 1",					420,	0, 170, 270 )
				.add( "Level 2",					420,	1, 170, 270 )
				.add( "Level 3",					420,	2, 170, 270 )
				.add( "Level 4",					420,	3, 170, 270 )
				.add( "Crawler_in",					420,	4, 120, 150 )
				.add( "Crawler_out",				420,	5, 125, 86  )
				)
			.add( Teleport( "Events" )
				.add( "Launch site",				225,	0, 170, 270 )
				.add( "Shuttle",					226,	0, 170, 270 )
				)	
			.add( Teleport( "Silver Town" )
				.add( "Silverlake",					202,	0, 170, 270 )
				.add( "Silverlake_dn",				202,	1,  95,  75 )
				.add( "Silverlake_up",				202,	2,  80,  70 )
				.add( "Quarry",						200,	0, 170, 270 )
				.add( "Uranium Mine",				201,	0, 170, 270 )
				.add( "Downtown",					203,	0, 170, 270 )
				.add( "Warehouses",					204,	0, 170, 270 )
				.add( "Trailer Park",				205,	0, 170, 270 )
				.add( "Crossroads",					206,	0, 170, 270 )
				.add( "Waterplant",					207,	0, 170, 270 )
				)
			.add( Teleport( "Silver Mines" )
				.add( "Iron Mine",					200,	1, 435, 390 )
				.add( "Copper Mine",				200,	2, 190, 210 )
				.add( "Uranium Fever",				201,	2, 225, 240 )
				.add( "Coal Mine In",				212,	1, 170, 175 )
				)
			.add( Teleport( "Silver Suburbs" )
				.add( "Paradise Avenue",			208,	0, 170, 270 )
				.add( "Spider Hive",				209,	0, 170, 270 )
				.add( "Highway",					210,	0, 170, 270 )
				.add( "Hills",						211,	0, 170, 270 )
				.add( "Coal Mine",					212,	0, 170, 270 )
				.add( "Radio Tower",				213,	0, 170, 270 )
				.add( "South Interstate",			214,	0, 170, 270 )
				.add( "Road to Elbrus",				215,	0, 170, 270 )
				.add( "Elbrus",						216,	0, 170, 270 )
				.add( "Desert",						218,	0, 170, 270 )
				.add( "Ruined Mall",				219,	0, 170, 270 )
				.add( "Junkyard",					220,	0, 170, 270 )
				.add( "Hacienda",					221,	0, 170, 270 )
				.add( "Road to GasCO",				222,	0, 170, 270 )
				.add( "GasCO",						223,	0, 170, 270 )
				.add( "Hill road",					224,	0, 170, 270 )
				)
			.add( Teleport( "Clinton" )
				.add( "Central District",			360,	0, 486, 384 )
				.add( "Central Shelter",			360,	1, 483, 408 )
				.add( "Station",					360,	2, 135, 161 )
				.add( "Second Floor",				360,	3, 170, 270 )
				.add( Teleport( "North Clinton" )
					.add( "Warehouses",				361,	0, 170, 270 )
					.add( "Substation",				362,	0, 170, 270 )
					.add( "Shops",					363,	0, 170, 270 )
					.add( "Docks",					364,	0, 170, 270 )
					.add( "Checkpoint",				365,	0, 170, 270 )
					.add( "Gas Station",			366,	0, 170, 270 )
					.add( "City Hall",				367,	0, 170, 270 )
					.add( "Library",				368,	0, 170, 270 )
					)
				.add( Teleport( "South Clinton" )
					.add( "Convoy",					369,	0, 170, 270 )
					.add( "East Side",				370,	0, 170, 270 )
					.add( "Police Department",		371,	0, 170, 270 )
					.add( "Crossroads",				372,	0, 170, 270 )
					.add( "Rail Crossing",			373,	0, 170, 270 )
					.add( "Downtown",				374,	0, 170, 270 )
					.add( "Clinton	 Park",			375,	0, 170, 270 )
					.add( "Excavation",				376,	0, 170, 270 )
					)
				)
			.add( Teleport( "Poseidon" )
				.add( "Sun Deck",					110,	0, 224, 241 )
				.add( "Trading Deck",				110,	1, 195, 219 )
				.add( "Recreation Deck",			110,	2, 199, 216 )
				.add( "Industrial Deck",			110,	3, 264, 196 )
				.add( "Lowest Deck",				110,	4, 294, 201 )
				.add( "Tower in",					110,	5, 180, 255 )
				.add( "Mess Hall",					110,	6, 177, 242 )
				.add( "Barracks",					110,	7, 180, 255 )
				.add( "Planning Center",			110,	8, 180, 255 )
				.add( "Bridge",						110,	9, 180, 255 )
				)
			)
		//General Tech Locations:
		.add( "Activation",							92,		0, 337, 184 )
		.add( "Sleep",								93,		0, 296, 178 )
		.add( "Haven",								95,		0, 129, 77  )
		.add( "Hell",								300,	0, 229, 177 )
		.add( "Arena1",								96,		0, 440, 510 )
			.add( "Arena2",							96,		1, 180, 270 )
		;
}

class Pos
{
	uint mapId;
	uint x;
	uint y;
	
	Pos( Map@ map, uint x, uint y )
	{
		this.mapId = valid( map ) ? map.Id : 0;
		this.x = x;
		this.y = y;
	}

	Pos( uint mapId, uint x, uint y )
	{
		this.mapId = mapId;
		this.x = x;
		this.y = y;
	}
	
	bool TransitToMap( Critter& cr )
	{
		if( mapId == 0 ) return false;
		
		Map@ map = GetMap( mapId );
		if( !valid( map ) ) return false;
		
		int attempt = 0;
		uint16 hexX = x, hexY = y;
		while( attempt < 10 )
		{
			if( !map.IsHexPassed( hexX, hexY ) )
				map.MoveHexByDir( hexX, hexY, Random( 0, 5 ), 1 );
			attempt++;
		}

		if( !map.IsHexPassed( hexX, hexY ) )
		{
			cr.Say( SAY_NETMSG, "|0xFFFF00 Hexes are busy." );
			return false;
		}
		
		cr.TransitToMap( mapId, hexX, hexY, cr.Dir );
		
		Location@ loc = map.GetLocation();
		if( valid(loc) )
			cr.SetWorldPos( loc.WorldX, loc.WorldY );
		else
			cr.Say( SAY_NETMSG, "|0xFFFF00 You have no idea where you are." );
		
		return true;
	}
	
	uint online() 
	{
		if( mapId == 0 )
		{
			return 0;
		}
		
		Map@ map = GetMap( mapId );
		if( !valid( map ) )
		{
			return 0;
		}

		return CountMapPlayers( map );
	}
}

class Teleport
{
	Teleport[] _list;
	uint list() 
	{ 
		return _list.length(); 
	}
	
	Teleport@ get( uint n ) 
	{ 
		if( n < 0 || n >= list() ) 
		{
			Log( "[" + name() + "] " + "Attempt of getting teleport #" + n + "/" + list() + "." );
			return null; 
		}
		
		return _list[n];
	}
	
	string _name;
	string name() { return _name; }
	string name( uint n ) 
	{ 
		Teleport@ target = get(n);
		return valid( target ) ? target.name() : "N-A";
	}

	Teleport( string name )
	{
		init( name );
	}
	
	Teleport( string name, uint locPID, uint mapN, uint x, uint y )
	{
		init( name );
		
		Map@ map = GetLocationMap( locPID, mapN );
		@this._pos = Pos( map, x, y );
		
		if( !valid( map ) )
		{
			this._name += " #" + locPID + "-" + mapN;
		}
	}
	
	void init( string name )
	{
		this._name = name;
		this._list.resize(0);
		@this._pos = null;
	}
	
	Teleport@ add( string name )
	{
		return add( Teleport( name ) );
	}
	
	Teleport@ add( string name, uint locPID, uint mapN, uint x, uint y )
	{
		return add( Teleport( name, locPID, mapN, x, y ) );
	}
	
	Teleport@ add( Teleport teleport )
	{
		_list.insertLast( teleport );
		return this;
	}

	Pos@ _pos;
	Teleport@ pos( Pos@ pos )
	{
		@this._pos = @pos;
		return this;
	}

	Teleport@ pos( Map@ map, uint x, uint y )
	{
		return pos( Pos( map, x, y ) );
	}

	Teleport@ pos( uint mapId, uint x, uint y )
	{
		return pos( Pos( mapId, x, y ) );
	}

	uint posOnline() 
	{
		return valid(_pos) ? _pos.online() : 0;
	}

	uint online() 
	{ 
		uint result = posOnline();
		for( uint n = 0, l = list(); n < l; n++ )
		{
			result += online(n);
		}
		
		return result;
	}
	
	uint online( uint n ) 
	{ 
		Teleport@ target = get(n);
		return valid( target ) ? target.online() : 0;
	}

	bool warp( Critter& cr )
	{
		return _pos.TransitToMap( cr );
	}
}

#endif